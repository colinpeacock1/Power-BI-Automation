{"name":"Test_InventoryTurnsModel_Flow","description":"This dataflow contains Dimension and Fact Tables that are used in the Corporate Inventory Report which is located in the \n\nWorkspace - Corporate Inventory Reports\nWorkspace - Corporate Inventory DataModels","version":"1.0","culture":"en-US","modifiedTime":"2022-05-31T09:09:30.3275454+00:00","pbi:mashup":{"fastCombine":true,"allowNativeQueries":true,"queriesMetadata":{"pM20Detail":{"queryId":"ec4c021a-4825-48ac-966b-58fa31eb935d","queryName":"pM20Detail","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"FACT_InventoryValue_Snowflake":{"queryId":"8bd7cb56-3915-4673-995c-3cc0ac44dd24","queryName":"FACT_InventoryValue_Snowflake","queryGroupId":"bbd6ee21-6a56-4a8c-b80f-2aad18bde5a6","loadEnabled":true},"pM20DetailAll":{"queryId":"2965b6ac-91d9-4192-9af1-155129dc719a","queryName":"pM20DetailAll","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pInventoryValue":{"queryId":"5a176480-b080-44b9-ae62-a957632271ca","queryName":"pInventoryValue","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"Version History Model":{"queryId":"d1d88b72-5b98-47c9-ac31-b235deae27d7","queryName":"Version History Model","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"Version History Report":{"queryId":"fdbcb66e-3942-4ea9-9c35-cae2a6b02ee7","queryName":"Version History Report","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"Version History":{"queryId":"2bf1e5d2-e81c-4c86-9342-1257c81a465f","queryName":"Version History","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"KeepColumn":{"queryId":"2f4ff8fa-1b12-40a2-a2b7-6ab7e8f858ac","queryName":"KeepColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"RemoveColumn":{"queryId":"c332635d-b620-4c74-b1e7-f5f74389d9f5","queryName":"RemoveColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"SnowflakeQuery":{"queryId":"f53ce5ac-0014-441f-a0f5-c540fdf4557c","queryName":"SnowflakeQuery","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FilterRowsbyColumn":{"queryId":"cc08daf4-2d5e-4da7-b970-d2acd9831a4c","queryName":"FilterRowsbyColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FilterNRows":{"queryId":"afd5b02b-0d56-4ee2-9c35-a0220a0bb1cb","queryName":"FilterNRows","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"GetEntity":{"queryId":"00aa1ccc-3354-4a12-92fa-d65ddc953bf4","queryName":"GetEntity","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"GetEntityFromWorkspace":{"queryId":"d7288925-e451-4640-bf3f-fc75518a1b8f","queryName":"GetEntityFromWorkspace","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"pWorkSpace":{"queryId":"136ef995-7550-4d55-b665-c306895cdb40","queryName":"pWorkSpace","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pDataFlow":{"queryId":"7f5f0e03-206a-413b-beab-85729ab5f679","queryName":"pDataFlow","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pFiscalCalendarDateFilter":{"queryId":"d4299f69-5646-40fe-a0f6-d88c1cedebff","queryName":"pFiscalCalendarDateFilter","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pSetMaxRows":{"queryId":"bea6a77d-6c5d-4e46-bc5f-0f951fe6f99b","queryName":"pSetMaxRows","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pOrganizationOrgs":{"queryId":"c53f6f06-7342-4e22-ab87-beab297e444e","queryName":"pOrganizationOrgs","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pTBU":{"queryId":"712aa63e-6676-42aa-9cfe-49f9254bd004","queryName":"pTBU","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pServerName":{"queryId":"9678b5e1-618d-4bed-8f47-a1e87cc65529","queryName":"pServerName","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pWarehouse":{"queryId":"f50e04c7-e91c-43ea-ac0e-154e3647e240","queryName":"pWarehouse","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pRole":{"queryId":"e7a0453e-71ac-4d6d-b576-c087fb422555","queryName":"pRole","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pDatabase":{"queryId":"6f2370f4-665d-4fdd-b09e-74757bd1d9d4","queryName":"pDatabase","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pTextColumns":{"queryId":"84ae23d9-f434-4633-ac64-d5a0658a06c2","queryName":"pTextColumns","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pNumberColumns":{"queryId":"0be1e274-784f-4b8a-95b0-6228b8506cf3","queryName":"pNumberColumns","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pDateColumns":{"queryId":"c34b9dae-2e82-4b86-a6a0-40e51b54f94f","queryName":"pDateColumns","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"ListOfOrgs":{"queryId":"f1f610fc-6348-47ae-86af-692f404cb1ce","queryName":"ListOfOrgs","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f","loadEnabled":true},"Version History Dataflow":{"queryId":"16844e25-79c0-48e1-a234-7adb2c775418","queryName":"Version History Dataflow","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"INFO_DataUpdateInfoInventoryVelocity":{"queryId":"3200c79b-04dc-4d96-bb86-666dad853946","queryName":"INFO_DataUpdateInfoInventoryVelocity","queryGroupId":"d535d7f0-f50c-47a1-a1c5-b52444b9ad0e","loadEnabled":true},"GetColumnNames":{"queryId":"f124556a-ff71-4757-89d1-938d689b772a","queryName":"GetColumnNames","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"SetColumnType":{"queryId":"ef8083ec-f84e-4d39-8c4b-38e7454a9282","queryName":"SetColumnType","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FilterRowsbyDate":{"queryId":"763819b7-1ac3-4543-9744-52e363b881dc","queryName":"FilterRowsbyDate","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"SplitDateTimeColumn":{"queryId":"a55a0d1e-4523-4716-9caf-8086c5484b47","queryName":"SplitDateTimeColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"}},"document":"section Section1;\r\nshared pM20Detail = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_M20_DETAIL_V.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared FACT_InventoryValue_Snowflake = let\n\tSource = SnowflakeQuery(\"SELECT \n\t\tINV_ORG_ID,\n\t\tINVENTORY_ITEM_ID,\n\t\tITEM_ORG_ID_KEY,\n\t\tITEM_ORG_CODE_KEY,\n\t\tOPERATING_UNIT_ID,\n\t\tITEM_NUMBER,\n\t\tITEM_TBU,\n\t\tITEM_PRODUCT_FAMILY,\n\t\tSOURCE_TYPE,\n\t\tSUBINVENTORY_CODE,\n\t\tSUBINVENTORY_TYPE,\n\t\tORGANIZATION_CODE,\n\t\tENTITY,\n\t\tACCOUNT,\n\t\tFIN_ENTITY,\n\t\tINV_QUANTITY,\n\t\tINV_BALANCE,\n\t\tINV_VALUE,\n\t\tINV_VALUE_USD,\n\t\tCURRENCY_CODE,\n\t\tCURRENCY_RATE,\n\t\tITEM_COST,\n\t\tMATERIAL_COST,\n\t\tMATERIAL_OVERHEAD_COST,\n\t\tOUTSIDE_PROCESSING_COST,\n\t\tOVERHEAD_COST,\n\t\tRESOURCE_COST,\n\t\tTOTAL_COST,\n\t\tFISCAL_YEAR_ID,\n\t\tVALID_FLAG,\n\t\tCOMMENTS,\n\t\tCREATION_DATE,\n\t\tCREATED_BY,\n\t\tFISCAL_WEEK_ID,\n\t\tFISCAL_WEEK,\n\t\tJE_SOURCE_CATEGORY,\n\t\tOPERATIONS_REPORTING,\n\t\tCS_DEMAND_SOURCE,\n\t\tCS_SUPPLY_SOURCE,\n\t\tITEM_TYPE_CODE,\n\t\tEXCLUDE_FLAG,\n\t\tEXCLUDE_COMMENT,\n\t\tWIP_CLASS,\n\t\tWIP_CLASS_CODE,\n\t\tITEM_TYPE,\n\t\tPLANNER_CODE,\n\t\tMAKE_BUY,\n\t\tITEM_STATUS,\n\t\tABC_CLASS,\n\t\tINV_STATUS,\n\t\tWIP_JOB_ID,\n\t\tITEM_PRODUCT_LINE,\n\t\tITEM_FORECAST_FIELD,\n\t\tITEM_DESC,\n\t\tWIP_JOB_NO,\n\t\tITEM_COST_USD,\n\t\tORA_PRODUCT_LINE,\n\t\tCONC_REQ_ID,\n\t\tFIN_PRODUCT_LINE,\n\t\tORA_FORECAST_FIELD,\n\t\tORG_TBU,\n\t\tORG_PRODUCT_FAMILY,\n\t\tORG_PRODUCT_LINE,\n\t\tORG_FORECAST_FIELD,\n\t\tORG_CATEGORY_ID,\n\t\tPRODUCT_MAP_KEY,\n\t\tFIN_TBU,\n\t\tFIN_PFC,\n\t\tWEEK_START_DATE,\n\t\tWEEK_END_DATE,\n\t\tPERIOD_START_DATE,\n\t\tPERIOD_END_DATE,\n\t\tQUARTER_START_DATE,\n\t\tQUARTER_END_DATE,\n\t\tFISCAL_QUARTER,\n\t\tFISCAL_YEAR,\n\t\tMGT_PRODUCT_GROUP,\n\t\tMGT_SUB_PRODUCT_GROUP,\n\t\tBUSINESS_SEGMENT,\n\t\tACCOUNT_NAME,\n\t\tACCOUNT_DESC,\n\t\tACCOUNT_TYPE,\n\t\tACCOUNT_SUB_GROUP,\n\t\tACCOUNT_GROUP,\n\t\tSUMMARY_ACCOUNT,\n\t\tINVVALUE_KEY\n\tFROM PROD_DB.APPS.XXREP_INVVALUE_V as inv\n\tWHERE\n\t\tACCOUNT LIKE '05%' AND ACCOUNT NOT IN ('05499', '05599')\n\t\t-- AND fdv.GL_PERIOD LIKE '%21%'\n\t\t-- AND inv.FISCAL_WEEK LIKE '2021 - WK_52'\n\t\tAND UPPER(inv.SOURCE_TYPE) NOT IN ('GL BALANCE SOURCE')\"),\n\tFilterRows = FilterNRows(Source, pSetMaxRows),\n\tFilterTBU = FilterRowsbyColumn(FilterRows, pTBU, \"FIN_TBU\"),\n\tTimeColumn = SplitDateTimeColumn(FilterTBU, \"CREATION_DATE\")\nin\n    TimeColumn;\r\nshared pM20DetailAll = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_M20_DETAIL_V_ALL_ACCOUNTS.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pInventoryValue = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_INVVALUE_V.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared #\"Version History Model\" = let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"FcyxCoMwFEbhV/nJXOUa7NJVKThEBUeRcmtuaDAa0ICvXx3PGb5xVEVOOamH0qR1Rs+MShTli+5VxeA39MJznJerm80nzwFJjoQ1WgmYd+EkFqdPPxhNcHFH3Q8DeLNgODlR+xWJv0EOuD2ueDftp+qM6VpYTuxCPC/c3J6apj8=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\nin\n    #\"Changed Type\";\r\nshared #\"Version History Report\" = let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"FcqxCoAgEIDhVzmcMy6xpbWpLVrDQeKoI1HJs16/Gv+Pf11V12KLqlEGjdHYa7TQ2QF/GlPgCDP5LW3n11MUFvYBst8JComuGR6WA4SKwM2l+lC+caGcLlHOvQ==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\nin\n    #\"Changed Type\";\r\nshared #\"Version History\" = let\n    Source = Table.Combine({#\"Version History Model\", #\"Version History Report\"})\nin\n    Source;\r\nshared KeepColumn = let\n    // This function filters a table (Entity) by the first\n    // N rows pass FilterValue to set number of rows to \n    // return\n    // :returns: Table\n    RemoveColumns = (Entity as table, ColumnNames as text) => let\n        CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\n        RemovedColumnList = List.Select(Table.ColumnNames(Entity), each not(List.Contains(CleanList, Text.Upper(_)))),\n        ModifiedEntity = if ColumnNames = \"\" then Entity else Table.RemoveColumns(Entity, RemovedColumnList)\n    in\n        ModifiedEntity\nin\n    RemoveColumns;\r\nshared RemoveColumn = let\n    // This function filters a table (Entity) by the first\n    // N rows pass FilterValue to set number of rows to \n    // return\n    // :returns: Table\n    RemoveColumns = (Entity as table, ColumnNames as text) => let\n        CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\n        RemovedColumnList = List.Select(Table.ColumnNames(Entity), each List.Contains(CleanList, Text.Upper(_))),\n        ModifiedEntity = Table.RemoveColumns(Entity, RemovedColumnList)\n    in\n        ModifiedEntity\nin\n    RemoveColumns;\r\nshared SnowflakeQuery = let\n    // This function runs a query on the Snowflake database\n    // pass a sql query as a string to get the results of the query  \n    // returned\n    // :returns: Table\n    SnowflakeQuery = (SQLQuery as text) => let\n        ReturnedValue = \n        Value.NativeQuery(\n          Snowflake.Databases(\n              pServerName,\n              pWarehouse, \n              [Role=pRole]\n            )\n          {[Name=pDatabase]}[Data],\n          SQLQuery, \n          null, \n          [EnableFolding=true]\n        )\n    in\n        ReturnedValue\nin\n    SnowflakeQuery;\r\nshared FilterRowsbyColumn = let\n    // This function filters a table (Entity) by the first\n    // N rows pass FilterValue to set number of rows to \n    // return\n    // :returns: Table\n    FilterColumn = (Entity as table, FilterValue as text, ColumnName as text) => let\n        CleanFilterValue = List.Transform(List.Transform(Text.Split(FilterValue, \",\"), Text.Trim), Text.Upper),\n        Filter = if FilterValue = \"\" then Entity else Table.SelectRows(Entity, each List.Contains(List.Buffer(CleanFilterValue), Text.Upper(Record.Field(_, ColumnName))))\n    in\n        Filter\nin\n    FilterColumn;\r\nshared FilterNRows = let\n    // This function filters a table (Entity) by the first\n    // N rows pass FilterValue to set number of rows to \n    // return\n    // :returns: Table\n    FilterMaxRows = (Entity as table, FilterValue as number) => let\n        FilterMaxNoOfRows = if FilterValue > 0 then Table.FirstN(Entity, FilterValue) else Entity\n    in\n        FilterMaxNoOfRows\nin\n    FilterMaxRows;\r\nshared GetEntity = let\n    // This function retrieves a table (Entity) from the given\n    // workspaceName and dataflowName which are pre-defined\n    // parameters \n    // Set the pWorkSpace and pDataFlow parameters before\n    // invoking this function\n    // :returns: Table\n    ReturnEntity = (pEntity as text) => let\n        Source = PowerBI.Dataflows(null),\n        UpperCaseWorkspace = Table.TransformColumns(Source, {{\"workspaceName\", each Text.Upper(Text.From(_)), type nullable text}}),\n        Workspace = UpperCaseWorkspace{[workspaceName=Text.Upper(pWorkSpace)]}[Data],        \n        UpperCaseDataflow = Table.TransformColumns(Workspace, {{\"dataflowName\", each Text.Upper(Text.From(_)), type nullable text}}),\n        Dataflow = UpperCaseDataflow{[dataflowName=Text.Upper(pDataFlow)]}[Data],        \n        UpperCaseEntity = Table.TransformColumns(Dataflow, {{\"entity\", each Text.Upper(Text.From(_)), type nullable text}}),\n        Entity = UpperCaseEntity{[entity=Text.Upper(pEntity)]}[Data]\n    in\n        Entity\nin\n    ReturnEntity;\r\nshared GetEntityFromWorkspace = let\n    // This function retrieves a table (Entity) for the give\n    // workspaceName and dataflowName which are variables\n    // invoked in this function\n    // :returns: Table\n    ReturnEntity = (pWorkSpace as text, pDataFlow as text, pEntity as text) => let\n        Source = PowerBI.Dataflows(null),\n        UpperCaseWorkspace = Table.TransformColumns(Source, {{\"workspaceName\", each Text.Upper(Text.From(_)), type nullable text}}),\n        Workspace = UpperCaseWorkspace{[workspaceName=Text.Upper(pWorkSpace)]}[Data],        \n        UpperCaseDataflow = Table.TransformColumns(Workspace, {{\"dataflowName\", each Text.Upper(Text.From(_)), type nullable text}}),\n        Dataflow = UpperCaseDataflow{[dataflowName=Text.Upper(pDataFlow)]}[Data],        \n        UpperCaseEntity = Table.TransformColumns(Dataflow, {{\"entity\", each Text.Upper(Text.From(_)), type nullable text}}),\n        Entity = UpperCaseEntity{[entity=Text.Upper(pEntity)]}[Data]\n    in\n        Entity\nin\n    ReturnEntity;\r\nshared pWorkSpace = \"COHR_DATAFLOWS\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pDataFlow = \"FIN_COMMON\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pFiscalCalendarDateFilter = 3 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type number];\r\n[Description = \"Use this parameter to set values to Return Max No. of Rows#(lf)Set this value to 0 to disable\"]\r\nshared pSetMaxRows = 0 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type number];\r\nshared pOrganizationOrgs = \"\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pTBU = \"\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pServerName = \"mma12090.snowflakecomputing.com\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pWarehouse = \"COMPUTE_REPORTING\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pRole = \"GLBMFGOPERATIONSROLE\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pDatabase = \"PROD_DB\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pTextColumns = \"ENTITY,DEPT,ACCT,PROJ,HFM_PRODUCT,ALT_HFM_PRODUCT,M20_TBU,M20_PFC,INTERCO,ACCOUNT_DESC,GL_PERIOD,ITEM_ORG_ID_KEY,ITEM_ORG_CODE_KEY,ITEM_NUMBER,ITEM_TBU,ITEM_PRODUCT_FAMILY,SOURCE_TYPE,SUBINVENTORY_CODE,SUBINVENTORY_TYPE,ORGANIZATION_CODE,CURRENCY_CODE,VALID_FLAG,COMMENTS,FISCAL_WEEK,JE_SOURCE_CATEGORY,OPERATIONS_REPORTING,CS_DEMAND_SOURCE,CS_SUPPLY_SOURCE,ITEM_TYPE_CODE,EXCLUDE_FLAG,EXCLUDE_COMMENT,WIP_CLASS,ITEM_TYPE,PLANNER_CODE,MAKE_BUY,ITEM_STATUS,ABC_CLASS,INV_STATUS,ITEM_PRODUCT_LINE,ITEM_FORECAST_FIELD,ITEM_DESC,WIP_JOB_NO,ORA_PRODUCT_LINE,FIN_PRODUCT_LINE,ORA_FORECAST_FIELD,ORG_TBU,ORG_PRODUCT_FAMILY,ORG_PRODUCT_LINE,ORG_FORECAST_FIELD,PRODUCT_MAP_KEY,FIN_TBU,FIN_PFC,FISCAL_QUARTER,FISCAL_YEAR,MGT_PRODUCT_GROUP,MGT_SUB_PRODUCT_GROUP,BUSINESS_SEGMENT,ACCOUNT_NAME,ACCOUNT_DESC,ACCOUNT_TYPE,ACCOUNT_SUB_GROUP,ACCOUNT_GROUP,SUMMARY_ACCOUNT,INVVALUE_KEY\r\n\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pNumberColumns = \"TRAN_QTY,ACCOUNTED_DR,ACCOUNTED_CR,NET_ACCOUNTED_AMT,ACCOUNTED_NET_USD,INV_VALUE,INV_VALUE_USD,CURRENCY_RATE,ITEM_COST,MATERIAL_COST,MATERIAL_OVERHEAD_COST,OUTSIDE_PROCESSING_COST,OVERHEAD_COST,RESOURCE_COST,TOTAL_COST\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pDateColumns = \"TRANS_DATE,WEEK_START_DATE,WEEK_END_DATE,PERIOD_START_DATE,PERIOD_END_DATE,QUARTER_START_DATE,QUARTER_END_DATE\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared ListOfOrgs = let\r\n  Source = pOrganizationOrgs,\r\n  GetListOfValues = Text.Split(Source, \",\"),\r\n  #\"Convert to table\" = Table.FromValue(GetListOfValues),\r\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Convert to table\", {{\"Value\", type text}}),\r\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"Value\", null}})\r\nin\r\n  #\"Replace errors\";\r\nshared #\"Version History Dataflow\" = let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"NY0xD4IwFAb/ypfOQApRB1eNiZs7YXiWh75Y2qZ9hL8vGh3vhru+N21jG2sq09muq+2+bg9od0f7UafoJeDG5KJ7bXwNokIeykVxJqXJxxUuMymPWEWfuJBTKN09lwqjzByKxPAzoDAiUaaZlXNBYa2XhCnmb1LCA2nJKRYu2+0/MMPwBg==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\nin\n    #\"Changed Type\";\r\nshared INFO_DataUpdateInfoInventoryVelocity = let\n  Entity = GetEntityFromWorkspace(\"COHR_Dataflows\", \"INV_VELOCITY\", \"Data Update Info\")\nin\n  Entity;\r\nshared GetColumnNames = let\n    // This function filters a table (Entity) by the first\n    // N rows pass FilterValue to set number of rows to \n    // return\n    // :returns: Table\n    ColumnNames = (Entity as table) => let\n        GetColumnNames = Table.ColumnNames(Entity),\n        ConvertToTable = Table.FromList(GetColumnNames, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\n        SetColumnName = Table.RenameColumns(ConvertToTable,{{\"Column1\", \"ColumnNames\"}}),\n        String = List.Accumulate(Table.ToList(SetColumnName),\"\",(state, current) => if state = \"\" then current else state & \",\" & current)\n    in\n        String\nin\n    ColumnNames;\r\nshared SetColumnType = let\n    // This function filters a table (Entity) by the first\n    // N rows pass FilterValue to set number of rows to \n    // return\n    // :returns: Table\n    TransformDTypes = (Entity as table, ColumnNames as text, dtype as text) => let\n        CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\n        ColumnList = List.Select(Table.ColumnNames(Entity), each List.Contains(CleanList, Text.Upper(_))),\n        // TransformDType = FilterMaxNoOfRows, each {{\"KANBAN_ITEM\", Int64.Type}, {\"MIN_MAX_ITEM\", Int64.Type}, {\"OPEN_BLANKETS\", Int64.Type}}),\n        TransformTypes = if List.IsEmpty(CleanList) then Entity else Table.TransformColumnTypes(Entity, List.Transform(\n                                                                                                    List.Intersect({Table.ColumnNames(Entity), ColumnList}),\n                                                                                                    if \n                                                                                                    dtype = \"text\" then each {_, type text} else if\n\t                                                                                                dtype = \"number\" then each {_, type number} else if\n                                                                                                    dtype = \"date\" then each {_, type date} else if\n                                                                                                    dtype = \"time\" then each {_, type time}  else if\n                                                                                                    dtype = \"datetime\" then each {_, type datetime}   else if\n                                                                                                    dtype = \"whole\" then each {_, Int64.Type} else\n                                                                                                    each {_, type text} // default\n                                                                                                    )\n                                                                                                    )\n\n        //TransformTypes = Entity\n    in\n        TransformTypes\nin\n    TransformDTypes;\r\nshared FilterRowsbyDate = let\n    // This function filters a table (Entity) by the first\n    // N rows pass FilterValue to set number of rows to \n    // return\n    // :returns: Table\n    FilterColumn = (Entity as table, ColumnName as text, MinDate as date, optional MaxDate as date) => let\n        Filter = if ColumnName = \"\" then Entity else Table.SelectRows(Entity, if MaxDate is null then each Record.Field(_, ColumnName) >= MinDate else each Record.Field(_, ColumnName) >= MinDate and Record.Field(_, ColumnName) <= MaxDate )\n    in\n        Filter\nin\n    FilterColumn;\r\nshared SplitDateTimeColumn = let\n    // This function filters a table (Entity) by the first\n    // N rows pass FilterValue to set number of rows to \n    // return\n    // :returns: Table\n    DataTimeColumns = (Entity as table, ColumnNameDate as text) => let\n        ColumnNameTime = Text.Replace(ColumnNameDate, \"DATE\", \"TIME\"),\n        TimeColumn = Table.DuplicateColumn(Entity, ColumnNameDate, ColumnNameTime),\n        SetFmtToTime = Table.TransformColumns(TimeColumn,{{ColumnNameTime, DateTime.Time, type time}}),\n        SetFmtToDate = Table.TransformColumns(SetFmtToTime,{{ColumnNameDate, DateTime.Date, type date}})\n    in\n        SetFmtToDate\nin\n    DataTimeColumns;\r\n"},"annotations":[{"name":"pbi:QueryGroups","value":"[{\"id\":\"7363d107-1f3d-48de-be9c-f033354d282e\",\"name\":\"Functions\",\"description\":null,\"parentId\":null,\"order\":0},{\"id\":\"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f\",\"name\":\"Parameters\",\"description\":\"\",\"parentId\":null,\"order\":1},{\"id\":\"bbd6ee21-6a56-4a8c-b80f-2aad18bde5a6\",\"name\":\"Facts - Inventory Turns\",\"description\":\"\",\"parentId\":null,\"order\":2},{\"id\":\"a91191ed-8efb-400b-bad7-2b8a42e2d413\",\"name\":\"Versioning\",\"description\":\"\",\"parentId\":null,\"order\":5},{\"id\":\"d535d7f0-f50c-47a1-a1c5-b52444b9ad0e\",\"name\":\"Information\",\"description\":\"Data Update Information for the Inventory Velocity Tables\",\"parentId\":null,\"order\":0}]"}],"entities":[{"$type":"LocalEntity","name":"FACT_InventoryValue_Snowflake","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"FACT_InventoryValue_Snowflake.csv"},"attributes":[{"name":"INV_ORG_ID","dataType":"double"},{"name":"INVENTORY_ITEM_ID","dataType":"double"},{"name":"ITEM_ORG_ID_KEY","dataType":"string"},{"name":"ITEM_ORG_CODE_KEY","dataType":"string"},{"name":"OPERATING_UNIT_ID","dataType":"double"},{"name":"ITEM_NUMBER","dataType":"string"},{"name":"ITEM_TBU","dataType":"string"},{"name":"ITEM_PRODUCT_FAMILY","dataType":"string"},{"name":"SOURCE_TYPE","dataType":"string"},{"name":"SUBINVENTORY_CODE","dataType":"string"},{"name":"SUBINVENTORY_TYPE","dataType":"string"},{"name":"ORGANIZATION_CODE","dataType":"string"},{"name":"ENTITY","dataType":"string"},{"name":"ACCOUNT","dataType":"string"},{"name":"FIN_ENTITY","dataType":"string"},{"name":"INV_QUANTITY","dataType":"double"},{"name":"INV_BALANCE","dataType":"double"},{"name":"INV_VALUE","dataType":"double"},{"name":"INV_VALUE_USD","dataType":"double"},{"name":"CURRENCY_CODE","dataType":"string"},{"name":"CURRENCY_RATE","dataType":"double"},{"name":"ITEM_COST","dataType":"double"},{"name":"MATERIAL_COST","dataType":"double"},{"name":"MATERIAL_OVERHEAD_COST","dataType":"double"},{"name":"OUTSIDE_PROCESSING_COST","dataType":"double"},{"name":"OVERHEAD_COST","dataType":"double"},{"name":"RESOURCE_COST","dataType":"double"},{"name":"TOTAL_COST","dataType":"double"},{"name":"FISCAL_YEAR_ID","dataType":"double"},{"name":"VALID_FLAG","dataType":"string"},{"name":"COMMENTS","dataType":"string"},{"name":"CREATION_DATE","dataType":"date"},{"name":"CREATED_BY","dataType":"double"},{"name":"FISCAL_WEEK_ID","dataType":"double"},{"name":"FISCAL_WEEK","dataType":"string"},{"name":"JE_SOURCE_CATEGORY","dataType":"string"},{"name":"OPERATIONS_REPORTING","dataType":"string"},{"name":"CS_DEMAND_SOURCE","dataType":"string"},{"name":"CS_SUPPLY_SOURCE","dataType":"string"},{"name":"ITEM_TYPE_CODE","dataType":"string"},{"name":"EXCLUDE_FLAG","dataType":"string"},{"name":"EXCLUDE_COMMENT","dataType":"string"},{"name":"WIP_CLASS","dataType":"string"},{"name":"WIP_CLASS_CODE","dataType":"string"},{"name":"ITEM_TYPE","dataType":"string"},{"name":"PLANNER_CODE","dataType":"string"},{"name":"MAKE_BUY","dataType":"string"},{"name":"ITEM_STATUS","dataType":"string"},{"name":"ABC_CLASS","dataType":"string"},{"name":"INV_STATUS","dataType":"string"},{"name":"WIP_JOB_ID","dataType":"double"},{"name":"ITEM_PRODUCT_LINE","dataType":"string"},{"name":"ITEM_FORECAST_FIELD","dataType":"string"},{"name":"ITEM_DESC","dataType":"string"},{"name":"WIP_JOB_NO","dataType":"string"},{"name":"ITEM_COST_USD","dataType":"double"},{"name":"ORA_PRODUCT_LINE","dataType":"string"},{"name":"CONC_REQ_ID","dataType":"double"},{"name":"FIN_PRODUCT_LINE","dataType":"string"},{"name":"ORA_FORECAST_FIELD","dataType":"string"},{"name":"ORG_TBU","dataType":"string"},{"name":"ORG_PRODUCT_FAMILY","dataType":"string"},{"name":"ORG_PRODUCT_LINE","dataType":"string"},{"name":"ORG_FORECAST_FIELD","dataType":"string"},{"name":"ORG_CATEGORY_ID","dataType":"double"},{"name":"PRODUCT_MAP_KEY","dataType":"string"},{"name":"FIN_TBU","dataType":"string"},{"name":"FIN_PFC","dataType":"string"},{"name":"WEEK_START_DATE","dataType":"dateTime"},{"name":"WEEK_END_DATE","dataType":"dateTime"},{"name":"PERIOD_START_DATE","dataType":"dateTime"},{"name":"PERIOD_END_DATE","dataType":"dateTime"},{"name":"QUARTER_START_DATE","dataType":"dateTime"},{"name":"QUARTER_END_DATE","dataType":"dateTime"},{"name":"FISCAL_QUARTER","dataType":"string"},{"name":"FISCAL_YEAR","dataType":"string"},{"name":"MGT_PRODUCT_GROUP","dataType":"string"},{"name":"MGT_SUB_PRODUCT_GROUP","dataType":"string"},{"name":"BUSINESS_SEGMENT","dataType":"string"},{"name":"ACCOUNT_NAME","dataType":"string"},{"name":"ACCOUNT_DESC","dataType":"string"},{"name":"ACCOUNT_TYPE","dataType":"string"},{"name":"ACCOUNT_SUB_GROUP","dataType":"string"},{"name":"ACCOUNT_GROUP","dataType":"string"},{"name":"SUMMARY_ACCOUNT","dataType":"string"},{"name":"INVVALUE_KEY","dataType":"string"},{"name":"CREATION_TIME","dataType":"time"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-26T19:34:31.2593327+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/c2f86ad3-8ab6-4af9-88d9-2b4783c2d8a7/FACT_InventoryValue_Snowflake.csv?snapshot=2022-05-26T19%3A34%3A31.1949123Z"}]},{"$type":"LocalEntity","name":"Version History Model","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History%20Model.csv"},"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-26T19:18:54.7418023+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/c2f86ad3-8ab6-4af9-88d9-2b4783c2d8a7/Version%20History%20Model.csv?snapshot=2022-05-26T19%3A18%3A54.5694643Z"}]},{"$type":"LocalEntity","name":"Version History Report","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History%20Report.csv"},"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-26T19:18:54.7730307+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/c2f86ad3-8ab6-4af9-88d9-2b4783c2d8a7/Version%20History%20Report.csv?snapshot=2022-05-26T19%3A18%3A54.4805150Z"}]},{"$type":"LocalEntity","name":"Version History","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History.csv"},"annotations":[{"name":"pbi:EntityTypeDisplayHint","value":"CalculatedEntity"}],"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-26T19:18:57.9725874+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/c2f86ad3-8ab6-4af9-88d9-2b4783c2d8a7/Version%20History.csv?snapshot=2022-05-26T19%3A18%3A57.9335507Z"}]},{"$type":"LocalEntity","name":"ListOfOrgs","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"ListOfOrgs.csv"},"attributes":[{"name":"Value","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-26T19:18:55.36678+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/c2f86ad3-8ab6-4af9-88d9-2b4783c2d8a7/ListOfOrgs.csv?snapshot=2022-05-26T19%3A18%3A55.3200385Z"}]},{"$type":"LocalEntity","name":"Version History Dataflow","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History%20Dataflow.csv"},"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-26T19:18:55.3980177+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/c2f86ad3-8ab6-4af9-88d9-2b4783c2d8a7/Version%20History%20Dataflow.csv?snapshot=2022-05-26T19%3A18%3A55.3420254Z"}]},{"$type":"LocalEntity","name":"INFO_DataUpdateInfoInventoryVelocity","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"INFO_DataUpdateInfoInventoryVelocity.csv"},"attributes":[{"name":"TABLE_NAME","dataType":"string"},{"name":"DATA_UPDATE_DATE","dataType":"dateTime"},{"name":"DATA_UPDATE_DESC","dataType":"string"},{"name":"DATA_FLOW_REFRESH_DATE","dataType":"dateTime"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-26T19:18:56.5194685+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/c2f86ad3-8ab6-4af9-88d9-2b4783c2d8a7/INFO_DataUpdateInfoInventoryVelocity.csv?snapshot=2022-05-26T19%3A18%3A56.4893721Z"}]}]}