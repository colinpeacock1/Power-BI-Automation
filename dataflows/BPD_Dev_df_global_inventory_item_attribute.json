{
  "name": "df_global_inventory_item_attribute_staging",
  "description": "This dataflow contains Fact Table PROD_DB.APPS.XXREP_MFG_MTL_ITEM_ATTRIBUTES_V that is used in the Corporate Inventory Report which is located in the \n\nWorkspace - Corporate Inventory Reports\nWorkspace - Corporate Inventory DataModels",
  "version": "1.0",
  "culture": "en-US",
  "modifiedTime": "2022-06-07T08:57:27.3425329+00:00",
  "pbi:mashup": {
    "fastCombine": true,
    "allowNativeQueries": false,
    "queriesMetadata": {
      "pM20Detail": {
        "queryId": "ec4c021a-4825-48ac-966b-58fa31eb935d",
        "queryName": "pM20Detail",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pM20DetailAll": {
        "queryId": "2965b6ac-91d9-4192-9af1-155129dc719a",
        "queryName": "pM20DetailAll",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pInventoryValue": {
        "queryId": "5a176480-b080-44b9-ae62-a957632271ca",
        "queryName": "pInventoryValue",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "Version History Model": {
        "queryId": "d1d88b72-5b98-47c9-ac31-b235deae27d7",
        "queryName": "Version History Model",
        "queryGroupId": "a91191ed-8efb-400b-bad7-2b8a42e2d413",
        "loadEnabled": true
      },
      "Version History Report": {
        "queryId": "fdbcb66e-3942-4ea9-9c35-cae2a6b02ee7",
        "queryName": "Version History Report",
        "queryGroupId": "a91191ed-8efb-400b-bad7-2b8a42e2d413",
        "loadEnabled": true
      },
      "Version History": {
        "queryId": "2bf1e5d2-e81c-4c86-9342-1257c81a465f",
        "queryName": "Version History",
        "queryGroupId": "a91191ed-8efb-400b-bad7-2b8a42e2d413",
        "loadEnabled": true
      },
      "KeepColumn": {
        "queryId": "2f4ff8fa-1b12-40a2-a2b7-6ab7e8f858ac",
        "queryName": "KeepColumn",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "RemoveColumn": {
        "queryId": "c332635d-b620-4c74-b1e7-f5f74389d9f5",
        "queryName": "RemoveColumn",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "SnowflakeQuery": {
        "queryId": "f53ce5ac-0014-441f-a0f5-c540fdf4557c",
        "queryName": "SnowflakeQuery",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "FilterRowsbyColumn": {
        "queryId": "cc08daf4-2d5e-4da7-b970-d2acd9831a4c",
        "queryName": "FilterRowsbyColumn",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "FilterNRows": {
        "queryId": "afd5b02b-0d56-4ee2-9c35-a0220a0bb1cb",
        "queryName": "FilterNRows",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "GetEntity": {
        "queryId": "00aa1ccc-3354-4a12-92fa-d65ddc953bf4",
        "queryName": "GetEntity",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "GetEntityFromWorkspace": {
        "queryId": "d7288925-e451-4640-bf3f-fc75518a1b8f",
        "queryName": "GetEntityFromWorkspace",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "pWorkSpace": {
        "queryId": "136ef995-7550-4d55-b665-c306895cdb40",
        "queryName": "pWorkSpace",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pDataFlow": {
        "queryId": "7f5f0e03-206a-413b-beab-85729ab5f679",
        "queryName": "pDataFlow",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pFiscalCalendarDateFilter": {
        "queryId": "d4299f69-5646-40fe-a0f6-d88c1cedebff",
        "queryName": "pFiscalCalendarDateFilter",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pSetMaxRows": {
        "queryId": "bea6a77d-6c5d-4e46-bc5f-0f951fe6f99b",
        "queryName": "pSetMaxRows",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pOrganizationOrgs": {
        "queryId": "c53f6f06-7342-4e22-ab87-beab297e444e",
        "queryName": "pOrganizationOrgs",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pTBU": {
        "queryId": "712aa63e-6676-42aa-9cfe-49f9254bd004",
        "queryName": "pTBU",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pServerName": {
        "queryId": "9678b5e1-618d-4bed-8f47-a1e87cc65529",
        "queryName": "pServerName",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pWarehouse": {
        "queryId": "f50e04c7-e91c-43ea-ac0e-154e3647e240",
        "queryName": "pWarehouse",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pRole": {
        "queryId": "e7a0453e-71ac-4d6d-b576-c087fb422555",
        "queryName": "pRole",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pDatabase": {
        "queryId": "6f2370f4-665d-4fdd-b09e-74757bd1d9d4",
        "queryName": "pDatabase",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pTextColumns": {
        "queryId": "84ae23d9-f434-4633-ac64-d5a0658a06c2",
        "queryName": "pTextColumns",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pNumberColumns": {
        "queryId": "0be1e274-784f-4b8a-95b0-6228b8506cf3",
        "queryName": "pNumberColumns",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "pDateColumns": {
        "queryId": "c34b9dae-2e82-4b86-a6a0-40e51b54f94f",
        "queryName": "pDateColumns",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"
      },
      "ListOfOrgs": {
        "queryId": "f1f610fc-6348-47ae-86af-692f404cb1ce",
        "queryName": "ListOfOrgs",
        "queryGroupId": "5bac1fbe-fe1d-4da2-94f5-070ea55ef66f",
        "loadEnabled": true
      },
      "Version History Dataflow": {
        "queryId": "16844e25-79c0-48e1-a234-7adb2c775418",
        "queryName": "Version History Dataflow",
        "queryGroupId": "a91191ed-8efb-400b-bad7-2b8a42e2d413",
        "loadEnabled": true
      },
      "GetColumnNames": {
        "queryId": "f124556a-ff71-4757-89d1-938d689b772a",
        "queryName": "GetColumnNames",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "SetColumnType": {
        "queryId": "ef8083ec-f84e-4d39-8c4b-38e7454a9282",
        "queryName": "SetColumnType",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "FilterRowsbyDate": {
        "queryId": "763819b7-1ac3-4543-9744-52e363b881dc",
        "queryName": "FilterRowsbyDate",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "SplitDateTimeColumn": {
        "queryId": "a55a0d1e-4523-4716-9caf-8086c5484b47",
        "queryName": "SplitDateTimeColumn",
        "queryGroupId": "7363d107-1f3d-48de-be9c-f033354d282e"
      },
      "FACT_M20Detail": {
        "queryId": "97a51e3a-ce7d-47be-b572-a6353037fce3",
        "queryName": "FACT_M20Detail",
        "queryGroupId": "bbd6ee21-6a56-4a8c-b80f-2aad18bde5a6",
        "loadEnabled": true
      },
      "RangeEnd": {
        "queryId": "dad6f8b1-3b18-40d4-8966-89f35d26b67f",
        "queryName": "RangeEnd"
      },
      "RangeStart": {
        "queryId": "919d5672-4fa0-4b31-8e6b-6ecb37358a94",
        "queryName": "RangeStart"
      },
      "FACT_M20Detail_Canary": {
        "queryId": "2e2e13bd-2b22-463d-89b4-66244a371351",
        "queryName": "FACT_M20Detail_Canary"
      }
    },
    "document": "section Section1;\r\n\r\nshared pM20Detail = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_M20_DETAIL_V.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pM20DetailAll = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_M20_DETAIL_V_ALL_ACCOUNTS.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pInventoryValue = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_INVVALUE_V.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared #\"Version History Model\" = let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"FcyxCoMwFEbhV/nJXOUa7NJVKThEBUeRcmtuaDAa0ICvXx3PGb5xVEVOOamH0qR1Rs+MShTli+5VxeA39MJznJerm80nzwFJjoQ1WgmYd+EkFqdPPxhNcHFH3Q8DeLNgODlR+xWJv0EOuD2ueDftp+qM6VpYTuxCPC/c3J6apj8=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\r\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\r\nin\r\n    #\"Changed Type\";\r\n\r\nshared #\"Version History Report\" = let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"FcqxCoAgEIDhVzmcMy6xpbWpLVrDQeKoI1HJs16/Gv+Pf11V12KLqlEGjdHYa7TQ2QF/GlPgCDP5LW3n11MUFvYBst8JComuGR6WA4SKwM2l+lC+caGcLlHOvQ==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\r\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\r\nin\r\n    #\"Changed Type\";\r\n\r\nshared #\"Version History\" = let\r\n    Source = Table.Combine({#\"Version History Model\", #\"Version History Report\"})\r\nin\r\n    Source;\r\n\r\nshared KeepColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    RemoveColumns = (Entity as table, ColumnNames as text) => let\r\n    CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\r\n    RemovedColumnList = List.Select(Table.ColumnNames(Entity), each not(List.Contains(CleanList, Text.Upper(_)))),\r\n    ModifiedEntity = if ColumnNames = \"\" then Entity else Table.RemoveColumns(Entity, RemovedColumnList)\r\nin\r\n    ModifiedEntity\r\nin\r\n    RemoveColumns;\r\n\r\nshared RemoveColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    RemoveColumns = (Entity as table, ColumnNames as text) => let\r\n    CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\r\n    RemovedColumnList = List.Select(Table.ColumnNames(Entity), each List.Contains(CleanList, Text.Upper(_))),\r\n    ModifiedEntity = Table.RemoveColumns(Entity, RemovedColumnList)\r\nin\r\n    ModifiedEntity\r\nin\r\n    RemoveColumns;\r\n\r\nshared SnowflakeQuery = let\r\n    // This function runs a query on the Snowflake database\r\n    // pass a sql query as a string to get the results of the query\r\n    // returned\r\n    // :returns: Table\r\n    SnowflakeQuery = (SQLQuery as text) => let\r\n    ReturnedValue =\r\n    Value.NativeQuery(\r\n    Snowflake.Databases(\r\n    pServerName,\r\n    pWarehouse,\r\n    [Role=pRole]\r\n    )\r\n    {[Name=pDatabase]}[Data],\r\n    SQLQuery,\r\n    null,\r\n    [EnableFolding=true]\r\n    )\r\nin\r\n    ReturnedValue\r\nin\r\n    SnowflakeQuery;\r\n\r\nshared FilterRowsbyColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    FilterColumn = (Entity as table, FilterValue as text, ColumnName as text) => let\r\n    CleanFilterValue = List.Transform(List.Transform(Text.Split(FilterValue, \",\"), Text.Trim), Text.Upper),\r\n    Filter = if List.AnyTrue({\r\n    not List.Contains(Table.ColumnNames(Entity), ColumnName),\r\n    FilterValue = \"\"\r\n    })\r\n    then Entity\r\n    else\r\n    try{\r\n    // returns a list with first entry an Entity (table)\r\n    Table.SelectRows(Entity, each List.Contains(List.Buffer(CleanFilterValue), Text.Upper(Record.Field(_, ColumnName))))\r\n    } otherwise {\r\n    Entity\r\n    },\r\n    // checks if Filter returned a list if so gets the filtered Entity from\r\n    // the first entry in the list otherwise returns the original Entity\r\n    Result = if Value.Is(Filter, List.Type) then Filter{0} else Filter\r\nin\r\n    Result\r\nin\r\n    FilterColumn;\r\n\r\nshared FilterNRows = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    FilterMaxRows = (Entity as table, FilterValue as number) => let\r\n    FilterMaxNoOfRows = if FilterValue > 0 then Table.FirstN(Entity, FilterValue) else Entity\r\nin\r\n    FilterMaxNoOfRows\r\nin\r\n    FilterMaxRows;\r\n\r\nshared GetEntity = let\r\n    // This function retrieves a table (Entity) from the given\r\n    // workspaceName and dataflowName which are pre-defined\r\n    // parameters\r\n    // Set the pWorkSpace and pDataFlow parameters before\r\n    // invoking this function\r\n    // :returns: Table\r\n    ReturnEntity = (pEntity as text) => let\r\n    Source = PowerBI.Dataflows(null),\r\n    UpperCaseWorkspace = Table.TransformColumns(Source, {{\"workspaceName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Workspace = UpperCaseWorkspace{[workspaceName=Text.Upper(pWorkSpace)]}[Data],\r\n    UpperCaseDataflow = Table.TransformColumns(Workspace, {{\"dataflowName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Dataflow = UpperCaseDataflow{[dataflowName=Text.Upper(pDataFlow)]}[Data],\r\n    UpperCaseEntity = Table.TransformColumns(Dataflow, {{\"entity\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Entity = UpperCaseEntity{[entity=Text.Upper(pEntity)]}[Data]\r\nin\r\n    Entity\r\nin\r\n    ReturnEntity;\r\n\r\nshared GetEntityFromWorkspace = let\r\n    // This function retrieves a table (Entity) for the give\r\n    // workspaceName and dataflowName which are variables\r\n    // invoked in this function\r\n    // :returns: Table\r\n    ReturnEntity = (pWorkSpace as text, pDataFlow as text, pEntity as text) => let\r\n    Source = PowerBI.Dataflows(null),\r\n    UpperCaseWorkspace = Table.TransformColumns(Source, {{\"workspaceName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Workspace = UpperCaseWorkspace{[workspaceName=Text.Upper(pWorkSpace)]}[Data],\r\n    UpperCaseDataflow = Table.TransformColumns(Workspace, {{\"dataflowName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Dataflow = UpperCaseDataflow{[dataflowName=Text.Upper(pDataFlow)]}[Data],\r\n    UpperCaseEntity = Table.TransformColumns(Dataflow, {{\"entity\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Entity = UpperCaseEntity{[entity=Text.Upper(pEntity)]}[Data]\r\nin\r\n    Entity\r\nin\r\n    ReturnEntity;\r\n\r\nshared pWorkSpace = \"COHR_DATAFLOWS\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pDataFlow = \"FIN_COMMON\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pFiscalCalendarDateFilter = 3 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type number];\r\n\r\n    [Description = \"Use this parameter to set values to Return Max No. of Rows#(lf)Set this value to 0 to disable\"]\r\nshared pSetMaxRows = 0 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type number];\r\n\r\nshared pOrganizationOrgs = \"\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pTBU = \"\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pServerName = \"mma12090.snowflakecomputing.com\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pWarehouse = \"COMPUTE_REPORTING\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pRole = \"GLBMFGOPERATIONSROLE\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pDatabase = \"PROD_DB\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pTextColumns = \"ENTITY,DEPT,ACCT,PROJ,HFM_PRODUCT,ALT_HFM_PRODUCT,M20_TBU,M20_PFC,INTERCO,ACCOUNT_DESC,GL_PERIOD,ITEM_ORG_ID_KEY,ITEM_ORG_CODE_KEY,ITEM_NUMBER,ITEM_TBU,ITEM_PRODUCT_FAMILY,SOURCE_TYPE,SUBINVENTORY_CODE,SUBINVENTORY_TYPE,ORGANIZATION_CODE,CURRENCY_CODE,VALID_FLAG,COMMENTS,FISCAL_WEEK,JE_SOURCE_CATEGORY,OPERATIONS_REPORTING,CS_DEMAND_SOURCE,CS_SUPPLY_SOURCE,ITEM_TYPE_CODE,EXCLUDE_FLAG,EXCLUDE_COMMENT,WIP_CLASS,ITEM_TYPE,PLANNER_CODE,MAKE_BUY,ITEM_STATUS,ABC_CLASS,INV_STATUS,ITEM_PRODUCT_LINE,ITEM_FORECAST_FIELD,ITEM_DESC,WIP_JOB_NO,ORA_PRODUCT_LINE,FIN_PRODUCT_LINE,ORA_FORECAST_FIELD,ORG_TBU,ORG_PRODUCT_FAMILY,ORG_PRODUCT_LINE,ORG_FORECAST_FIELD,PRODUCT_MAP_KEY,FIN_TBU,FIN_PFC,FISCAL_QUARTER,FISCAL_YEAR,MGT_PRODUCT_GROUP,MGT_SUB_PRODUCT_GROUP,BUSINESS_SEGMENT,ACCOUNT_NAME,ACCOUNT_DESC,ACCOUNT_TYPE,ACCOUNT_SUB_GROUP,ACCOUNT_GROUP,SUMMARY_ACCOUNT,INVVALUE_KEY\r\n    \" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pNumberColumns = \"TRAN_QTY,ACCOUNTED_DR,ACCOUNTED_CR,NET_ACCOUNTED_AMT,ACCOUNTED_NET_USD,INV_VALUE,INV_VALUE_USD,CURRENCY_RATE,ITEM_COST,MATERIAL_COST,MATERIAL_OVERHEAD_COST,OUTSIDE_PROCESSING_COST,OVERHEAD_COST,RESOURCE_COST,TOTAL_COST\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pDateColumns = \"TRANS_DATE,WEEK_START_DATE,WEEK_END_DATE,PERIOD_START_DATE,PERIOD_END_DATE,QUARTER_START_DATE,QUARTER_END_DATE\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared ListOfOrgs = let\r\n    Source = pOrganizationOrgs,\r\n    GetListOfValues = Text.Split(Source, \",\"),\r\n    #\"Convert to table\" = Table.FromValue(GetListOfValues),\r\n    #\"Transform columns\" = Table.TransformColumnTypes(#\"Convert to table\", {{\"Value\", type text}}),\r\n    #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"Value\", null}})\r\nin\r\n    #\"Replace errors\";\r\n\r\nshared #\"Version History Dataflow\" = let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"NY0xDsIwDAC/YmVuqjSiCysIiY296mBSFyzSJIpd9fsUBOPdcDcMpmtd60xjvPPeut76HrrD0X3UKUdOcCMMObx2viZWxghKonBGxTnmDUIlVJpgY33CBYOC4j2SNDDxQkk4p58BTBMUrLiQUhUQUrsWmHP9Jjk9oKy1ZCHZb/+BGcc3\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\r\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\r\nin\r\n    #\"Changed Type\";\r\n\r\nshared GetColumnNames = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    ColumnNames = (Entity as table) => let\r\n    GetColumnNames = Table.ColumnNames(Entity),\r\n    ConvertToTable = Table.FromList(GetColumnNames, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n    SetColumnName = Table.RenameColumns(ConvertToTable,{{\"Column1\", \"ColumnNames\"}}),\r\n    String = List.Accumulate(Table.ToList(SetColumnName),\"\",(state, current) => if state = \"\" then current else state & \",\" & current)\r\nin\r\n    String\r\nin\r\n    ColumnNames;\r\n\r\nshared SetColumnType = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    TransformDTypes = (Entity as table, ColumnNames as text, dtype as text) => let\r\n    CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\r\n    ColumnList = List.Select(Table.ColumnNames(Entity), each List.Contains(CleanList, Text.Upper(_))),\r\n    // TransformDType = FilterMaxNoOfRows, each {{\"KANBAN_ITEM\", Int64.Type}, {\"MIN_MAX_ITEM\", Int64.Type}, {\"OPEN_BLANKETS\", Int64.Type}}),\r\n    TransformTypes = if List.IsEmpty(CleanList) then Entity else Table.TransformColumnTypes(Entity, List.Transform(\r\n    List.Intersect({Table.ColumnNames(Entity), ColumnList}),\r\n    if\r\n    dtype = \"text\" then each {_, type text} else if\r\n    dtype = \"number\" then each {_, type number} else if\r\n    dtype = \"date\" then each {_, type date} else if\r\n    dtype = \"time\" then each {_, type time}  else if\r\n    dtype = \"datetime\" then each {_, type datetime}   else if\r\n    dtype = \"whole\" then each {_, Int64.Type} else\r\n    each {_, type text} // default\r\n    )\r\n    )\r\n    //TransformTypes = Entity\r\nin\r\n    TransformTypes\r\nin\r\n    TransformDTypes;\r\n\r\nshared FilterRowsbyDate = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    FilterColumn = (Entity as table, ColumnName as text, MinDate as date, optional MaxDate as date) => let\r\n    Filter = if ColumnName = \"\" then Entity else Table.SelectRows(Entity, if MaxDate is null then each Record.Field(_, ColumnName) >= MinDate else each Record.Field(_, ColumnName) >= MinDate and Record.Field(_, ColumnName) <= MaxDate )\r\nin\r\n    Filter\r\nin\r\n    FilterColumn;\r\n\r\nshared SplitDateTimeColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    DataTimeColumns = (Entity as table, ColumnNameDate as text) => let\r\n    ModifyColumns = (Entity as table, ColumnNameDate as text) =>\r\n    let\r\n    ColumnNameTime = Text.Replace(ColumnNameDate, \"DATE\", \"TIME\"),\r\n    TimeColumn = Table.DuplicateColumn(Entity, ColumnNameDate, ColumnNameTime),\r\n    SetFmtToTime = Table.TransformColumns(TimeColumn,{{ColumnNameTime, DateTime.Time, type time}}),\r\n    SetFmtToDate = Table.TransformColumns(SetFmtToTime,{{ColumnNameDate, DateTime.Date, type date}})\r\nin\r\n    SetFmtToDate,\r\n    SetFmtToDate = if not List.Contains(Table.ColumnNames(Entity), ColumnNameDate) then Entity else ModifyColumns(Entity, ColumnNameDate)\r\nin\r\n    SetFmtToDate\r\nin\r\n    DataTimeColumns;\r\n\r\nshared FACT_M20Detail = let\r\n    Source = SnowflakeQuery(\"SELECT\r\n    ENTITY,\r\n    DEPT,\r\n    ACCT,\r\n    PROJ,\r\n    INTERCO,\r\n    ACCOUNT_DESC,\r\n    GL_PERIOD,\r\n    PERIOD_START_DATE,\r\n    PERIOD_END_DATE,\r\n    ITEM_NUMBER,\r\n    ITEM_DESCRIPTION,\r\n    TRANSACTION_SOURCE,\r\n    TRANS_DATE,\r\n    ACCOUNTED_DR,\r\n    ACCOUNTED_CR,\r\n    NET_ACCOUNTED_AMT,\r\n    ACCOUNTED_NET_USD,\r\n    CURRENCY_CODE,\r\n    VENDOR_NAME,\r\n    VENDOR_NUMBER,\r\n    ORDER_LINE_TYPE,\r\n    ORDER_NUMBER,\r\n    TRX_TYPE_NAME,\r\n    ORDER_TYPE,\r\n    SALES_SERVICE_CODE,\r\n    TRAN_QTY,\r\n    TRX_NUMBER,\r\n    EXTERNAL_SO_NUMBER,\r\n    EXTERNAL_CUSTOMER,\r\n    WIP_JOB_NO,\r\n    PERIOD_YEAR,\r\n    PO_NUMBER,\r\n    JE_NAME,\r\n    JE_LINE_NUM,\r\n    INTERNAL_PO_NUMBER,\r\n    COMMODITY_CATEGORY,\r\n    FORECAST_CATEGORY,\r\n    SUBINVENTORY_CODE,\r\n    ACCOUNT_ALIAS_NAME,\r\n    PLANNER_CODE,\r\n    BUYER_ID,\r\n    ACCOUNTING_LINE_TYPE,\r\n    TRAN_SOURCE_NAME,\r\n    MATERAIL_TRAN_REFERENCE,\r\n    JE_LINE_DESCRIPTION,\r\n    CREATION_DATE,\r\n    WIP_ACCOUNTING_CLASS,\r\n    ALLOCATION_PERCENT,\r\n    MARKET_CODE,\r\n    ITEM_TBU,\r\n    ITEM_PFC,\r\n    ITEM_PRODUCT_LINE,\r\n    ITEM_ORG_TBU,\r\n    ITEM_ORG_PFC,\r\n    M20_TBU,\r\n    M20_PFC,\r\n    HFM_PRODUCT,\r\n    ALT_HFM_PRODUCT,\r\n    --COST_ELEMENT,\r\n    TRANS_DIFF_START,\r\n    MONTH_DAYS,\r\n    REV_TRANS_DATE,\r\n    M2_DETAIL_KEY\r\n    FROM PROD_DB.APPS.XXREP_M20_DETAIL_V as m2\r\n    WHERE\r\n    ((ACCT >= '40000' AND ACCT <= '49999') OR       -- COGS\r\n    (ACCT >= '50000' AND ACCT <= '89999'))          -- Department Expenses\r\n    --    AND UPPER(M20_TBU) = 'DPSS_GERMANY'\r\n    AND (GL_PERIOD LIKE '%21%' OR GL_PERIOD LIKE '%22%')\r\n    \"),\r\n    FilterRows = FilterNRows(Source, pSetMaxRows),\r\n    FilterTBUs = FilterRowsbyColumn(FilterRows, pTBU, \"M20_TBU\"),\r\n    ColumnText = SetColumnType(FilterTBUs, pTextColumns, \"text\"),\r\n    ColumnInt = SetColumnType(ColumnText, pNumberColumns, \"number\"),\r\n    ColumnDate = SetColumnType(ColumnInt, pDateColumns, \"date\"),\r\n    #\"FACT_M20Detail-5245565F5452414E535F44415445-autogenerated_for_incremental_refresh\" = Table.SelectRows(ColumnDate, each DateTime.From([REV_TRANS_DATE]) >= RangeStart and DateTime.From([REV_TRANS_DATE]) < RangeEnd)\r\nin\r\n    #\"FACT_M20Detail-5245565F5452414E535F44415445-autogenerated_for_incremental_refresh\";\r\n\r\nshared FACT_M20Detail_Canary = let\r\n    Source = SnowflakeQuery(\"SELECT\r\n    ENTITY,\r\n    DEPT,\r\n    ACCT,\r\n    PROJ,\r\n    INTERCO,\r\n    ACCOUNT_DESC,\r\n    GL_PERIOD,\r\n    PERIOD_START_DATE,\r\n    PERIOD_END_DATE,\r\n    ITEM_NUMBER,\r\n    ITEM_DESCRIPTION,\r\n    TRANSACTION_SOURCE,\r\n    TRANS_DATE,\r\n    ACCOUNTED_DR,\r\n    ACCOUNTED_CR,\r\n    NET_ACCOUNTED_AMT,\r\n    ACCOUNTED_NET_USD,\r\n    CURRENCY_CODE,\r\n    VENDOR_NAME,\r\n    VENDOR_NUMBER,\r\n    ORDER_LINE_TYPE,\r\n    ORDER_NUMBER,\r\n    TRX_TYPE_NAME,\r\n    ORDER_TYPE,\r\n    SALES_SERVICE_CODE,\r\n    TRAN_QTY,\r\n    TRX_NUMBER,\r\n    EXTERNAL_SO_NUMBER,\r\n    EXTERNAL_CUSTOMER,\r\n    WIP_JOB_NO,\r\n    PERIOD_YEAR,\r\n    PO_NUMBER,\r\n    JE_NAME,\r\n    JE_LINE_NUM,\r\n    INTERNAL_PO_NUMBER,\r\n    COMMODITY_CATEGORY,\r\n    FORECAST_CATEGORY,\r\n    SUBINVENTORY_CODE,\r\n    ACCOUNT_ALIAS_NAME,\r\n    PLANNER_CODE,\r\n    BUYER_ID,\r\n    ACCOUNTING_LINE_TYPE,\r\n    TRAN_SOURCE_NAME,\r\n    MATERAIL_TRAN_REFERENCE,\r\n    JE_LINE_DESCRIPTION,\r\n    CREATION_DATE,\r\n    WIP_ACCOUNTING_CLASS,\r\n    ALLOCATION_PERCENT,\r\n    MARKET_CODE,\r\n    ITEM_TBU,\r\n    ITEM_PFC,\r\n    ITEM_PRODUCT_LINE,\r\n    ITEM_ORG_TBU,\r\n    ITEM_ORG_PFC,\r\n    M20_TBU,\r\n    M20_PFC,\r\n    HFM_PRODUCT,\r\n    ALT_HFM_PRODUCT,\r\n    --COST_ELEMENT,\r\n    TRANS_DIFF_START,\r\n    MONTH_DAYS,\r\n    REV_TRANS_DATE,\r\n    M2_DETAIL_KEY\r\n    FROM PROD_DB.APPS.XXREP_M20_DETAIL_V as m2\r\n    WHERE\r\n    ((ACCT >= '40000' AND ACCT <= '49999') OR       -- COGS\r\n    (ACCT >= '50000' AND ACCT <= '89999'))          -- Department Expenses\r\n    --    AND UPPER(M20_TBU) = 'DPSS_GERMANY'\r\n    AND (GL_PERIOD LIKE '%21%' OR GL_PERIOD LIKE '%22%')\r\n    \"),\r\n    FilterRows = FilterNRows(Source, pSetMaxRows),\r\n    FilterTBUs = FilterRowsbyColumn(FilterRows, pTBU, \"M20_TBU\"),\r\n    ColumnText = SetColumnType(FilterTBUs, pTextColumns, \"text\"),\r\n    ColumnInt = SetColumnType(ColumnText, pNumberColumns, \"number\"),\r\n    ColumnDate = SetColumnType(ColumnInt, pDateColumns, \"date\"),\r\n    #\"FACT_M20Detail-5245565F5452414E535F44415445-autogenerated_for_incremental_refresh\" = Table.SelectRows(ColumnDate, each DateTime.From([REV_TRANS_DATE]) >= RangeStart and DateTime.From([REV_TRANS_DATE]) < RangeEnd), #\"FACT_M20Detail_Canary-5245565F5452414E535F44415445-autogenerated_for_incremental_refresh\" = DateTime.ToText(Table.Max(#\"FACT_M20Detail-5245565F5452414E535F44415445-autogenerated_for_incremental_refresh\",each [REV_TRANS_DATE], [REV_TRANS_DATE=#datetime(0001,01,01,00,00,00)])[REV_TRANS_DATE]) in #\"FACT_M20Detail_Canary-5245565F5452414E535F44415445-autogenerated_for_incremental_refresh\";\r\n\r\nshared RangeStart = let RangeStart = #datetime(0001,01,01,00,00,00) meta [IsParameterQuery=true, List={}, Type=\"DateTime\", IsParameterQueryRequired=true, Description=\"autogenerated_for_incremental_refresh\"] in RangeStart;\r\n\r\nshared RangeEnd = let RangeEnd = #datetime(9999,12,31,23,59,59) meta [IsParameterQuery=true, List={}, Type=\"DateTime\", IsParameterQueryRequired=true, Description=\"autogenerated_for_incremental_refresh\"] in RangeEnd;\r\n\r\n"
  },
  "annotations": [
    {
      "name": "pbi:QueryGroups",
      "value": "[{\"id\":\"7363d107-1f3d-48de-be9c-f033354d282e\",\"name\":\"Functions\",\"description\":null,\"parentId\":null,\"order\":0},{\"id\":\"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f\",\"name\":\"Parameters\",\"description\":\"\",\"parentId\":null,\"order\":1},{\"id\":\"bbd6ee21-6a56-4a8c-b80f-2aad18bde5a6\",\"name\":\"Facts - Inventory Turns\",\"description\":\"\",\"parentId\":null,\"order\":2},{\"id\":\"a91191ed-8efb-400b-bad7-2b8a42e2d413\",\"name\":\"Versioning\",\"description\":\"\",\"parentId\":null,\"order\":5},{\"id\":\"d535d7f0-f50c-47a1-a1c5-b52444b9ad0e\",\"name\":\"Information\",\"description\":\"Data Update Information for the Inventory Velocity Tables\",\"parentId\":null,\"order\":0}]"
    }
  ],
  "entities": [
    {
      "$type": "LocalEntity",
      "name": "Version History Model",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "Version%20History%20Model.csv"
      },
      "attributes": [
        { "name": "Version Number", "dataType": "string" },
        { "name": "Revision Date/Time", "dataType": "dateTime" },
        { "name": "Developer Name", "dataType": "string" },
        { "name": "Revision Notes", "dataType": "string" },
        { "name": "Revision Type", "dataType": "string" }
      ],
      "partitions": [
        {
          "name": "FullRefreshPolicyPartition",
          "refreshTime": "2022-06-13T09:47:35.7366431+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/Version%20History%20Model.csv?snapshot=2022-06-13T09%3A47%3A35.1860291Z"
        }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "Version History Report",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "Version%20History%20Report.csv"
      },
      "attributes": [
        { "name": "Version Number", "dataType": "string" },
        { "name": "Revision Date/Time", "dataType": "dateTime" },
        { "name": "Developer Name", "dataType": "string" },
        { "name": "Revision Notes", "dataType": "string" },
        { "name": "Revision Type", "dataType": "string" }
      ],
      "partitions": [
        {
          "name": "FullRefreshPolicyPartition",
          "refreshTime": "2022-06-13T09:47:35.7522318+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/Version%20History%20Report.csv?snapshot=2022-06-13T09%3A47%3A35.1610431Z"
        }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "Version History",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "Version%20History.csv"
      },
      "annotations": [
        { "name": "pbi:EntityTypeDisplayHint", "value": "CalculatedEntity" }
      ],
      "attributes": [
        { "name": "Version Number", "dataType": "string" },
        { "name": "Revision Date/Time", "dataType": "dateTime" },
        { "name": "Developer Name", "dataType": "string" },
        { "name": "Revision Notes", "dataType": "string" },
        { "name": "Revision Type", "dataType": "string" }
      ],
      "partitions": [
        {
          "name": "FullRefreshPolicyPartition",
          "refreshTime": "2022-06-13T09:47:37.5803949+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/Version%20History.csv?snapshot=2022-06-13T09%3A47%3A37.5656612Z"
        }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "ListOfOrgs",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "ListOfOrgs.csv"
      },
      "attributes": [{ "name": "Value", "dataType": "string" }],
      "partitions": [
        {
          "name": "FullRefreshPolicyPartition",
          "refreshTime": "2022-06-13T09:47:31.6914303+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/ListOfOrgs.csv?snapshot=2022-06-13T09%3A47%3A31.6710497Z"
        }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "Version History Dataflow",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "Version%20History%20Dataflow.csv"
      },
      "attributes": [
        { "name": "Version Number", "dataType": "string" },
        { "name": "Revision Date/Time", "dataType": "dateTime" },
        { "name": "Developer Name", "dataType": "string" },
        { "name": "Revision Notes", "dataType": "string" },
        { "name": "Revision Type", "dataType": "string" }
      ],
      "partitions": [
        {
          "name": "FullRefreshPolicyPartition",
          "refreshTime": "2022-06-13T09:47:31.8007883+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/Version%20History%20Dataflow.csv?snapshot=2022-06-13T09%3A47%3A31.7729910Z"
        }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "FACT_M20Detail",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "IncrementalRefreshPolicy",
        "locationPattern": "FACT_M20Detail/part.csv",
        "rollingWindowGranularity": "quarter",
        "rollingWindowPeriods": 6,
        "incrementalGranularity": "quarter",
        "incrementalPeriods": 1,
        "pollingQuery": "FACT_M20Detail_Canary"
      },
      "annotations": [
        {
          "name": "pbi:IncrementalRefreshDetectChangeAttribute",
          "value": "REV_TRANS_DATE"
        },
        {
          "name": "pbi:IncrementalRefreshFilterByAttribute",
          "value": "REV_TRANS_DATE"
        }
      ],
      "attributes": [
        { "name": "ENTITY", "dataType": "string" },
        { "name": "DEPT", "dataType": "string" },
        { "name": "ACCT", "dataType": "string" },
        { "name": "PROJ", "dataType": "string" },
        { "name": "INTERCO", "dataType": "string" },
        { "name": "ACCOUNT_DESC", "dataType": "string" },
        { "name": "GL_PERIOD", "dataType": "string" },
        { "name": "PERIOD_START_DATE", "dataType": "date" },
        { "name": "PERIOD_END_DATE", "dataType": "date" },
        { "name": "ITEM_NUMBER", "dataType": "string" },
        { "name": "ITEM_DESCRIPTION", "dataType": "string" },
        { "name": "TRANSACTION_SOURCE", "dataType": "string" },
        { "name": "TRANS_DATE", "dataType": "date" },
        { "name": "ACCOUNTED_DR", "dataType": "double" },
        { "name": "ACCOUNTED_CR", "dataType": "double" },
        { "name": "NET_ACCOUNTED_AMT", "dataType": "double" },
        { "name": "ACCOUNTED_NET_USD", "dataType": "double" },
        { "name": "CURRENCY_CODE", "dataType": "string" },
        { "name": "VENDOR_NAME", "dataType": "string" },
        { "name": "VENDOR_NUMBER", "dataType": "string" },
        { "name": "ORDER_LINE_TYPE", "dataType": "string" },
        { "name": "ORDER_NUMBER", "dataType": "double" },
        { "name": "TRX_TYPE_NAME", "dataType": "string" },
        { "name": "ORDER_TYPE", "dataType": "string" },
        { "name": "SALES_SERVICE_CODE", "dataType": "string" },
        { "name": "TRAN_QTY", "dataType": "double" },
        { "name": "TRX_NUMBER", "dataType": "string" },
        { "name": "EXTERNAL_SO_NUMBER", "dataType": "double" },
        { "name": "EXTERNAL_CUSTOMER", "dataType": "string" },
        { "name": "WIP_JOB_NO", "dataType": "string" },
        { "name": "PERIOD_YEAR", "dataType": "double" },
        { "name": "PO_NUMBER", "dataType": "string" },
        { "name": "JE_NAME", "dataType": "string" },
        { "name": "JE_LINE_NUM", "dataType": "double" },
        { "name": "INTERNAL_PO_NUMBER", "dataType": "double" },
        { "name": "COMMODITY_CATEGORY", "dataType": "string" },
        { "name": "FORECAST_CATEGORY", "dataType": "string" },
        { "name": "SUBINVENTORY_CODE", "dataType": "string" },
        { "name": "ACCOUNT_ALIAS_NAME", "dataType": "string" },
        { "name": "PLANNER_CODE", "dataType": "string" },
        { "name": "BUYER_ID", "dataType": "double" },
        { "name": "ACCOUNTING_LINE_TYPE", "dataType": "string" },
        { "name": "TRAN_SOURCE_NAME", "dataType": "string" },
        { "name": "MATERAIL_TRAN_REFERENCE", "dataType": "string" },
        { "name": "JE_LINE_DESCRIPTION", "dataType": "string" },
        { "name": "CREATION_DATE", "dataType": "dateTime" },
        { "name": "WIP_ACCOUNTING_CLASS", "dataType": "string" },
        { "name": "ALLOCATION_PERCENT", "dataType": "double" },
        { "name": "MARKET_CODE", "dataType": "string" },
        { "name": "ITEM_TBU", "dataType": "string" },
        { "name": "ITEM_PFC", "dataType": "string" },
        { "name": "ITEM_PRODUCT_LINE", "dataType": "string" },
        { "name": "ITEM_ORG_TBU", "dataType": "string" },
        { "name": "ITEM_ORG_PFC", "dataType": "string" },
        { "name": "M20_TBU", "dataType": "string" },
        { "name": "M20_PFC", "dataType": "string" },
        { "name": "HFM_PRODUCT", "dataType": "string" },
        { "name": "ALT_HFM_PRODUCT", "dataType": "string" },
        { "name": "TRANS_DIFF_START", "dataType": "double" },
        { "name": "MONTH_DAYS", "dataType": "double" },
        { "name": "REV_TRANS_DATE", "dataType": "dateTime" },
        { "name": "M2_DETAIL_KEY", "dataType": "string" }
      ],
      "partitions": [
        {
          "name": "IncrementalRefreshPolicyPartition-2020Q4",
          "refreshTime": "2022-06-03T17:10:23.6770534+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/FACT_M20Detail/part-2020Q4.csv?snapshot=2022-06-03T17%3A10%3A23.6010717Z",
          "pbi:refreshBookmark": "12/31/2020 11:59:59 PM",
          "pbi:source": {
            "$type": "RangePolicyPartitionSource",
            "start": "2020-10-01T00:00:00",
            "end": "2021-01-01T00:00:00"
          }
        },
        {
          "name": "IncrementalRefreshPolicyPartition-2021Q1",
          "refreshTime": "2022-06-03T17:11:20.6319034+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/FACT_M20Detail/part-2021Q1.csv?snapshot=2022-06-03T17%3A11%3A20.5885530Z",
          "pbi:refreshBookmark": "3/31/2021 11:59:59 PM",
          "pbi:source": {
            "$type": "RangePolicyPartitionSource",
            "start": "2021-01-01T00:00:00",
            "end": "2021-04-01T00:00:00"
          }
        },
        {
          "name": "IncrementalRefreshPolicyPartition-2021Q2",
          "refreshTime": "2022-06-03T17:22:00.8373475+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/FACT_M20Detail/part-2021Q2.csv?snapshot=2022-06-03T17%3A22%3A00.8082028Z",
          "pbi:refreshBookmark": "6/30/2021 11:59:59 PM",
          "pbi:source": {
            "$type": "RangePolicyPartitionSource",
            "start": "2021-04-01T00:00:00",
            "end": "2021-07-01T00:00:00"
          }
        },
        {
          "name": "IncrementalRefreshPolicyPartition-2021Q3",
          "refreshTime": "2022-06-03T17:11:33.7243326+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/FACT_M20Detail/part-2021Q3.csv?snapshot=2022-06-03T17%3A11%3A33.7030685Z",
          "pbi:refreshBookmark": "9/30/2021 11:59:59 PM",
          "pbi:source": {
            "$type": "RangePolicyPartitionSource",
            "start": "2021-07-01T00:00:00",
            "end": "2021-10-01T00:00:00"
          }
        },
        {
          "name": "IncrementalRefreshPolicyPartition-2021Q4",
          "refreshTime": "2022-06-03T17:12:16.6909225+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/FACT_M20Detail/part-2021Q4.csv?snapshot=2022-06-03T17%3A12%3A16.6595502Z",
          "pbi:refreshBookmark": "12/31/2021 11:59:59 PM",
          "pbi:source": {
            "$type": "RangePolicyPartitionSource",
            "start": "2021-10-01T00:00:00",
            "end": "2022-01-01T00:00:00"
          }
        },
        {
          "name": "IncrementalRefreshPolicyPartition-2022Q1",
          "refreshTime": "2022-06-03T17:11:20.8819182+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/FACT_M20Detail/part-2022Q1.csv?snapshot=2022-06-03T17%3A11%3A20.8603976Z",
          "pbi:refreshBookmark": "3/31/2022 11:59:59 PM",
          "pbi:source": {
            "$type": "RangePolicyPartitionSource",
            "start": "2022-01-01T00:00:00",
            "end": "2022-04-01T00:00:00"
          }
        },
        {
          "name": "IncrementalRefreshPolicyPartition-2022Q2",
          "refreshTime": "2022-06-13T09:56:11.4413826+00:00",
          "location": "https://wabiwuscpcdsap1.blob.core.windows.net:443/f74e4c68-42ac-40b2-80d9-e35992c7d61f/FACT_M20Detail/part-2022Q2.csv?snapshot=2022-06-13T09%3A56%3A11.4158232Z",
          "pbi:refreshBookmark": "6/11/2022 11:59:59 PM",
          "pbi:source": {
            "$type": "RangePolicyPartitionSource",
            "start": "2022-04-01T00:00:00",
            "end": "2022-07-01T00:00:00"
          }
        }
      ]
    }
  ]
}
