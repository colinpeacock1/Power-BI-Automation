{"name":"df_global_cycle_count_staging","description":"This dataflow contains Fact Table MTL_CYCLE_COUNT_ENTRIES_V that is used in the Corporate Cycle Count Report which is located in the \n\nWorkspace - Corporate Inventory Reports\nWorkspace - Corporate Inventory DataModels","version":"1.0","culture":"en-US","modifiedTime":"2022-06-29T14:51:43.8899915+00:00","pbi:mashup":{"fastCombine":true,"allowNativeQueries":true,"queriesMetadata":{"pM20Detail":{"queryId":"ec4c021a-4825-48ac-966b-58fa31eb935d","queryName":"pM20Detail","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pM20DetailAll":{"queryId":"2965b6ac-91d9-4192-9af1-155129dc719a","queryName":"pM20DetailAll","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pInventoryValue":{"queryId":"5a176480-b080-44b9-ae62-a957632271ca","queryName":"pInventoryValue","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"Version History Model":{"queryId":"d1d88b72-5b98-47c9-ac31-b235deae27d7","queryName":"Version History Model","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"Version History Report":{"queryId":"fdbcb66e-3942-4ea9-9c35-cae2a6b02ee7","queryName":"Version History Report","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"Version History":{"queryId":"2bf1e5d2-e81c-4c86-9342-1257c81a465f","queryName":"Version History","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"KeepColumn":{"queryId":"2f4ff8fa-1b12-40a2-a2b7-6ab7e8f858ac","queryName":"KeepColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"RemoveColumn":{"queryId":"c332635d-b620-4c74-b1e7-f5f74389d9f5","queryName":"RemoveColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"SnowflakeQuery":{"queryId":"f53ce5ac-0014-441f-a0f5-c540fdf4557c","queryName":"SnowflakeQuery","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FilterRowsbyColumn":{"queryId":"cc08daf4-2d5e-4da7-b970-d2acd9831a4c","queryName":"FilterRowsbyColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FilterNRows":{"queryId":"afd5b02b-0d56-4ee2-9c35-a0220a0bb1cb","queryName":"FilterNRows","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"GetEntity":{"queryId":"00aa1ccc-3354-4a12-92fa-d65ddc953bf4","queryName":"GetEntity","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"GetEntityFromWorkspace":{"queryId":"d7288925-e451-4640-bf3f-fc75518a1b8f","queryName":"GetEntityFromWorkspace","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"pWorkSpace":{"queryId":"136ef995-7550-4d55-b665-c306895cdb40","queryName":"pWorkSpace","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pDataFlow":{"queryId":"7f5f0e03-206a-413b-beab-85729ab5f679","queryName":"pDataFlow","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pFiscalCalendarDateFilter":{"queryId":"d4299f69-5646-40fe-a0f6-d88c1cedebff","queryName":"pFiscalCalendarDateFilter","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pSetMaxRows":{"queryId":"bea6a77d-6c5d-4e46-bc5f-0f951fe6f99b","queryName":"pSetMaxRows","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pOrganizationOrgs":{"queryId":"c53f6f06-7342-4e22-ab87-beab297e444e","queryName":"pOrganizationOrgs","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pTBU":{"queryId":"712aa63e-6676-42aa-9cfe-49f9254bd004","queryName":"pTBU","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pServerName":{"queryId":"9678b5e1-618d-4bed-8f47-a1e87cc65529","queryName":"pServerName","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pWarehouse":{"queryId":"f50e04c7-e91c-43ea-ac0e-154e3647e240","queryName":"pWarehouse","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pRole":{"queryId":"e7a0453e-71ac-4d6d-b576-c087fb422555","queryName":"pRole","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pDatabase":{"queryId":"6f2370f4-665d-4fdd-b09e-74757bd1d9d4","queryName":"pDatabase","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pTextColumns":{"queryId":"84ae23d9-f434-4633-ac64-d5a0658a06c2","queryName":"pTextColumns","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pNumberColumns":{"queryId":"0be1e274-784f-4b8a-95b0-6228b8506cf3","queryName":"pNumberColumns","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pDateColumns":{"queryId":"c34b9dae-2e82-4b86-a6a0-40e51b54f94f","queryName":"pDateColumns","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"ListOfOrgs":{"queryId":"f1f610fc-6348-47ae-86af-692f404cb1ce","queryName":"ListOfOrgs","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f","loadEnabled":true},"Version History Dataflow":{"queryId":"16844e25-79c0-48e1-a234-7adb2c775418","queryName":"Version History Dataflow","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"GetColumnNames":{"queryId":"f124556a-ff71-4757-89d1-938d689b772a","queryName":"GetColumnNames","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"SetColumnType":{"queryId":"ef8083ec-f84e-4d39-8c4b-38e7454a9282","queryName":"SetColumnType","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FilterRowsbyDate":{"queryId":"763819b7-1ac3-4543-9744-52e363b881dc","queryName":"FilterRowsbyDate","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"SplitDateTimeColumn":{"queryId":"a55a0d1e-4523-4716-9caf-8086c5484b47","queryName":"SplitDateTimeColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FACT_CycleCount":{"queryId":"f9bae0de-2d51-4614-84a5-9502e80f9f77","queryName":"FACT_CycleCount","queryGroupId":"bbd6ee21-6a56-4a8c-b80f-2aad18bde5a6","loadEnabled":true},"DIM_Inventory Orgs":{"queryId":"f66b3ad7-fe1f-430c-9c43-2933c0759a9c","queryName":"DIM_Inventory Orgs","queryGroupId":"bbd12982-f4e8-47a8-b9c2-92a56f7d7c5a","loadEnabled":true},"SortColumnNames":{"queryId":"9e4aed77-5af7-4928-a650-4715185ce2ea","queryName":"SortColumnNames","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"}},"document":"section Section1;\r\nshared pM20Detail = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_M20_DETAIL_V.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pM20DetailAll = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_M20_DETAIL_V_ALL_ACCOUNTS.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pInventoryValue = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_INVVALUE_V.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared #\"Version History Model\" = let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WMtQz0DNQ0lEyMjAy0jUw0zWyUDA0sjIACTnn52TmKQSkJibnJ2cD+Z55mSWZiTkKufkpqTkKyUWpiSWpKQrlmSUZCr4hPvHOkc4+rvHO/qF+IfGufiFBnq7B8WFAbb4g5UqxsQA=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\r\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\r\nin\r\n    #\"Changed Type\";\r\nshared #\"Version History Report\" = let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"FcqxCoAgEIDhVzmcMy6xpbWpLVrDQeKoI1HJs16/Gv+Pf11V12KLqlEGjdHYa7TQ2QF/GlPgCDP5LW3n11MUFvYBst8JComuGR6WA4SKwM2l+lC+caGcLlHOvQ==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\r\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\r\nin\r\n    #\"Changed Type\";\r\nshared #\"Version History\" = let\r\n    Source = Table.Combine({#\"Version History Model\", #\"Version History Report\"})\r\nin\r\n    Source;\r\nshared KeepColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    RemoveColumns = (Entity as table, ColumnNames as text) => let\r\n    CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\r\n    RemovedColumnList = List.Select(Table.ColumnNames(Entity), each not(List.Contains(CleanList, Text.Upper(_)))),\r\n    ModifiedEntity = if ColumnNames = \"\" then Entity else Table.RemoveColumns(Entity, RemovedColumnList)\r\nin\r\n    ModifiedEntity\r\nin\r\n    RemoveColumns;\r\nshared RemoveColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    RemoveColumns = (Entity as table, ColumnNames as text) => let\r\n    CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\r\n    RemovedColumnList = List.Select(Table.ColumnNames(Entity), each List.Contains(CleanList, Text.Upper(_))),\r\n    ModifiedEntity = Table.RemoveColumns(Entity, RemovedColumnList)\r\nin\r\n    ModifiedEntity\r\nin\r\n    RemoveColumns;\r\nshared SnowflakeQuery = let\r\n    // This function runs a query on the Snowflake database\r\n    // pass a sql query as a string to get the results of the query\r\n    // returned\r\n    // :returns: Table\r\n    SnowflakeQuery =\r\n    (SQLQuery as text) =>\r\n    let\r\n    connTimeout = 2 * 60 * 60,\r\n    // hr * mins * sec\r\n    commTimeout = 2 * 60 * 60,\r\n    // hr * mins * secs\r\n    ReturnedValue =\r\n    Value.NativeQuery(\r\n    Snowflake.Databases(\r\n    pServerName,\r\n    pWarehouse,\r\n    [\r\n    Role = pRole,\r\n    CreateNavigationProperties = null,\r\n    ConnectionTimeout = connTimeout,\r\n    CommandTimeout = commTimeout\r\n    ]\r\n    ){[Name = pDatabase]}\r\n    [Data],\r\n    SQLQuery,\r\n    null,\r\n    [EnableFolding = true]\r\n    )\r\nin\r\n    ReturnedValue\r\nin\r\n    SnowflakeQuery;\r\nshared FilterRowsbyColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    FilterColumn = (Entity as table, FilterValue as text, ColumnName as text) => let\r\n    CleanFilterValue = List.Transform(List.Transform(Text.Split(FilterValue, \",\"), Text.Trim), Text.Upper),\r\n    Filter = if List.AnyTrue({\r\n    not List.Contains(Table.ColumnNames(Entity), ColumnName),\r\n    FilterValue = \"\"\r\n    })\r\n    then Entity\r\n    else\r\n    try{\r\n    // returns a list with first entry an Entity (table)\r\n    Table.SelectRows(Entity, each List.Contains(List.Buffer(CleanFilterValue), Text.Upper(Record.Field(_, ColumnName))))\r\n    } otherwise {\r\n    Entity\r\n    },\r\n    // checks if Filter returned a list if so gets the filtered Entity from\r\n    // the first entry in the list otherwise returns the original Entity\r\n    Result = if Value.Is(Filter, List.Type) then Filter{0} else Filter\r\nin\r\n    Result\r\nin\r\n    FilterColumn;\r\nshared FilterNRows = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    FilterMaxRows = (Entity as table, FilterValue as number) => let\r\n    FilterMaxNoOfRows = if FilterValue > 0 then Table.FirstN(Entity, FilterValue) else Entity\r\nin\r\n    FilterMaxNoOfRows\r\nin\r\n    FilterMaxRows;\r\nshared GetEntity = let\r\n    // This function retrieves a table (Entity) from the given\r\n    // workspaceName and dataflowName which are pre-defined\r\n    // parameters\r\n    // Set the pWorkSpace and pDataFlow parameters before\r\n    // invoking this function\r\n    // :returns: Table\r\n    ReturnEntity = (pEntity as text) => let\r\n    Source = PowerBI.Dataflows(null),\r\n    UpperCaseWorkspace = Table.TransformColumns(Source, {{\"workspaceName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Workspace = UpperCaseWorkspace{[workspaceName=Text.Upper(pWorkSpace)]}[Data],\r\n    UpperCaseDataflow = Table.TransformColumns(Workspace, {{\"dataflowName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Dataflow = UpperCaseDataflow{[dataflowName=Text.Upper(pDataFlow)]}[Data],\r\n    UpperCaseEntity = Table.TransformColumns(Dataflow, {{\"entity\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Entity = UpperCaseEntity{[entity=Text.Upper(pEntity)]}[Data]\r\nin\r\n    Entity\r\nin\r\n    ReturnEntity;\r\nshared GetEntityFromWorkspace = let\r\n    // This function retrieves a table (Entity) for the give\r\n    // workspaceName and dataflowName which are variables\r\n    // invoked in this function\r\n    // :returns: Table\r\n    ReturnEntity = (pWorkSpace as text, pDataFlow as text, pEntity as text) => let\r\n    Source = PowerBI.Dataflows(null),\r\n    UpperCaseWorkspace = Table.TransformColumns(Source, {{\"workspaceName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Workspace = UpperCaseWorkspace{[workspaceName=Text.Upper(pWorkSpace)]}[Data],\r\n    UpperCaseDataflow = Table.TransformColumns(Workspace, {{\"dataflowName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Dataflow = UpperCaseDataflow{[dataflowName=Text.Upper(pDataFlow)]}[Data],\r\n    UpperCaseEntity = Table.TransformColumns(Dataflow, {{\"entity\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Entity = UpperCaseEntity{[entity=Text.Upper(pEntity)]}[Data]\r\nin\r\n    Entity\r\nin\r\n    ReturnEntity;\r\nshared pWorkSpace = \"COHR_DATAFLOWS\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pDataFlow = \"FIN_COMMON\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pFiscalCalendarDateFilter = 3 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type number];\r\n[Description = \"Use this parameter to set values to Return Max No. of Rows#(lf)Set this value to 0 to disable\"]\r\nshared pSetMaxRows = 0 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type number];\r\nshared pOrganizationOrgs = \"SPG\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pTBU = \"\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pServerName = \"mma12090.snowflakecomputing.com\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pWarehouse = \"COMPUTE_REPORTING\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pRole = \"GLBMFGOPERATIONSROLE\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pDatabase = \"PROD_DB\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pTextColumns = \"ENTITY,DEPT,ACCT,PROJ,HFM_PRODUCT,ALT_HFM_PRODUCT,M20_TBU,M20_PFC,INTERCO,ACCOUNT_DESC,GL_PERIOD,ITEM_ORG_ID_KEY,ITEM_ORG_CODE_KEY,ITEM_NUMBER,ITEM_TBU,ITEM_PRODUCT_FAMILY,SOURCE_TYPE,SUBINVENTORY_CODE,SUBINVENTORY_TYPE,ORGANIZATION_CODE,CURRENCY_CODE,VALID_FLAG,COMMENTS,FISCAL_WEEK,JE_SOURCE_CATEGORY,OPERATIONS_REPORTING,CS_DEMAND_SOURCE,CS_SUPPLY_SOURCE,ITEM_TYPE_CODE,EXCLUDE_FLAG,EXCLUDE_COMMENT,WIP_CLASS,ITEM_TYPE,PLANNER_CODE,MAKE_BUY,ITEM_STATUS,ABC_CLASS,INV_STATUS,ITEM_PRODUCT_LINE,ITEM_FORECAST_FIELD,ITEM_DESC,WIP_JOB_NO,ORA_PRODUCT_LINE,FIN_PRODUCT_LINE,ORA_FORECAST_FIELD,ORG_TBU,ORG_PRODUCT_FAMILY,ORG_PRODUCT_LINE,ORG_FORECAST_FIELD,PRODUCT_MAP_KEY,FIN_TBU,FIN_PFC,FISCAL_QUARTER,FISCAL_YEAR,MGT_PRODUCT_GROUP,MGT_SUB_PRODUCT_GROUP,BUSINESS_SEGMENT,ACCOUNT_NAME,ACCOUNT_DESC,ACCOUNT_TYPE,ACCOUNT_SUB_GROUP,ACCOUNT_GROUP,SUMMARY_ACCOUNT,INVVALUE_KEY\r\n    \" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pNumberColumns = \"TRAN_QTY,ACCOUNTED_DR,ACCOUNTED_CR,NET_ACCOUNTED_AMT,ACCOUNTED_NET_USD,INV_VALUE,INV_VALUE_USD,CURRENCY_RATE,ITEM_COST,MATERIAL_COST,MATERIAL_OVERHEAD_COST,OUTSIDE_PROCESSING_COST,OVERHEAD_COST,RESOURCE_COST,TOTAL_COST\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared pDateColumns = \"TRANS_DATE,WEEK_START_DATE,WEEK_END_DATE,PERIOD_START_DATE,PERIOD_END_DATE,QUARTER_START_DATE,QUARTER_END_DATE\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared ListOfOrgs = let\r\n    Source = pOrganizationOrgs,\r\n    GetListOfValues = Text.Split(Source, \",\"),\r\n    #\"Convert to table\" = Table.FromValue(GetListOfValues),\r\n    #\"Transform columns\" = Table.TransformColumnTypes(#\"Convert to table\", {{\"Value\", type text}}),\r\n    #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"Value\", null}})\r\nin\r\n    #\"Replace errors\";\r\nshared #\"Version History Dataflow\" = let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"NY2xCsIwEEB/5cjclDSIiKsiuLmXDmd61cM0Cbkr/X2r6Pje8F7fm651rTON8c576/bWH6DbHd1HnXLkBDfCkMNr42tiZYygJApnVJxiXiFUQqURVtYnXDAoKN4jSQMjz5SEc/oZwDRCwYozKVUBIbVLgSnXb5LTA8pSSxaS7fYfmGF4Aw==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\r\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\r\nin\r\n    #\"Changed Type\";\r\nshared GetColumnNames = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    ColumnNames = (Entity as table) => let\r\n    GetColumnNames = Table.ColumnNames(Entity),\r\n    ConvertToTable = Table.FromList(GetColumnNames, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n    SetColumnName = Table.RenameColumns(ConvertToTable,{{\"Column1\", \"ColumnNames\"}}),\r\n    String = List.Accumulate(Table.ToList(SetColumnName),\"\",(state, current) => if state = \"\" then current else state & \",\" & current)\r\nin\r\n    String\r\nin\r\n    ColumnNames;\r\nshared SetColumnType = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    TransformDTypes = (Entity as table, ColumnNames as text, dtype as text) => let\r\n    CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\r\n    ColumnList = List.Select(Table.ColumnNames(Entity), each List.Contains(CleanList, Text.Upper(_))),\r\n    // TransformDType = FilterMaxNoOfRows, each {{\"KANBAN_ITEM\", Int64.Type}, {\"MIN_MAX_ITEM\", Int64.Type}, {\"OPEN_BLANKETS\", Int64.Type}}),\r\n    TransformTypes = if List.IsEmpty(CleanList) then Entity else Table.TransformColumnTypes(Entity, List.Transform(\r\n    List.Intersect({Table.ColumnNames(Entity), ColumnList}),\r\n    if\r\n    dtype = \"text\" then each {_, type text} else if\r\n    dtype = \"number\" then each {_, type number} else if\r\n    dtype = \"date\" then each {_, type date} else if\r\n    dtype = \"time\" then each {_, type time}  else if\r\n    dtype = \"datetime\" then each {_, type datetime}   else if\r\n    dtype = \"whole\" then each {_, Int64.Type} else\r\n    each {_, type text} // default\r\n    )\r\n    )\r\n    //TransformTypes = Entity\r\nin\r\n    TransformTypes\r\nin\r\n    TransformDTypes;\r\nshared FilterRowsbyDate = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    FilterColumn = (Entity as table, ColumnName as text, MinDate as date, optional MaxDate as date) => let\r\n    Filter = if ColumnName = \"\" then Entity else Table.SelectRows(Entity, if MaxDate is null then each Record.Field(_, ColumnName) >= MinDate else each Record.Field(_, ColumnName) >= MinDate and Record.Field(_, ColumnName) <= MaxDate )\r\nin\r\n    Filter\r\nin\r\n    FilterColumn;\r\nshared SplitDateTimeColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    DataTimeColumns = (Entity as table, ColumnNameDate as text) => let\r\n    ModifyColumns = (Entity as table, ColumnNameDate as text) =>\r\n    let\r\n    ColumnNameTime = Text.Replace(ColumnNameDate, \"DATE\", \"TIME\"),\r\n    TimeColumn = Table.DuplicateColumn(Entity, ColumnNameDate, ColumnNameTime),\r\n    SetFmtToTime = Table.TransformColumns(TimeColumn,{{ColumnNameTime, DateTime.Time, type time}}),\r\n    SetFmtToDate = Table.TransformColumns(SetFmtToTime,{{ColumnNameDate, DateTime.Date, type date}})\r\nin\r\n    SetFmtToDate,\r\n    SetFmtToDate = if not List.Contains(Table.ColumnNames(Entity), ColumnNameDate) then Entity else ModifyColumns(Entity, ColumnNameDate)\r\nin\r\n    SetFmtToDate\r\nin\r\n    DataTimeColumns;\r\nshared FACT_CycleCount = let\n    Source = SnowflakeQuery(\"SELECT\n    EXTRACT_DATE,\n\tORGANIZATION_CODE,\n\tCYCLE_COUNT_NAME,\n\tCYCLE_COUNT_DESCRIPTION,\n\tDISABLE_DATE,\n\tCOUNT_LIST_SEQUENCE,\n\tINVENTORY_ITEM_ID,\n\tITEM_NUMBER,\n\tABC_CLASS_NAME,\n\tSUBINVENTORY,\n\tLOCATOR,\n\tLOT_NUMBER,\n\tSERIAL_NUMBER,\n\tCOUNT_STATUS,\n\tCREATION_DATE,\n\tCOUNT_DUE_DATE,\n\tSYSTEM_QUANTITY_CURRENT,\n\tCOUNT_QUANTITY_CURRENT,\n\tCOUNT_UOM_CURRENT,\n\tCOUNT_DATE_CURRENT,\n\tCURRENT_COUNT_BY,\n\tSYSTEM_QUANTITY_PRIOR,\n\tCOUNT_QUANTITY_PRIOR,\n\tCOUNT_UOM_PRIOR,\n\tCOUNT_DATE_PRIOR,\n\tPRIOR_COUNT_BY,\n\tSYSTEM_QUANTITY_FIRST,\n\tCOUNT_QUANTITY_FIRST,\n\tFIRST_PASS_STATUS,\n\tCOUNT_UOM_FIRST,\n\tCOUNT_DATE_FIRST,\n\tFIRST_COUNT_BY,\n\tADJUSTMENT_QUANTITY,\n\tCOUNT_PASS_STATUS,\n\tADJUSTMENT_DATE,\n\tADJUSTMENT_AMOUNT,\n\tLAST_UPDATED_BY,\n\tCOUNT_APPROVAL_DATE\nFROM\n    PROD_DB.APPS.XXREP_MFG_CYCLE_COUNT_ACTIVITY_V as cct\"),\nFilterRows = FilterNRows(Source, pSetMaxRows),\nFilterOrgs = FilterRowsbyColumn(FilterRows, pOrganizationOrgs, \"ORGANIZATION_CODE\"),\nSortColumns = SortColumnNames(FilterOrgs)\nin\n    SortColumns;\r\nshared #\"DIM_Inventory Orgs\" = let\n    Source = #\"GetEntity\"(\"Inventory Organizations\"),\n    SetColumnTypes = Table.TransformColumnTypes(Source, {{\"INVORG_ID\", Int64.Type}, {\"OPERATING_UNIT_ID\", type text}, {\"LEDGER_ID\", type text}})\nin\n    SetColumnTypes;\r\nshared SortColumnNames = let\n    // This function filters a table (Entity) by the first\n    // N rows pass FilterValue to set number of rows to \n    // return\n    // :returns: Table\n    ColumnNames = (Entity as table) => let\n        GetColumnNames = Table.ColumnNames(Entity),\n        ConvertToTable = Table.FromList(GetColumnNames, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\n        SetColumnName = Table.RenameColumns(ConvertToTable,{{\"Column1\", \"ColumnNames\"}}),\n        SortedColumns = List.Sort(Table.ToList(SetColumnName)),\n        SortedTableColumns = Table.ReorderColumns(Entity, SortedColumns)\n    in\n        SortedTableColumns\nin\n    ColumnNames;\r\n"},"annotations":[{"name":"pbi:QueryGroups","value":"[{\"id\":\"7363d107-1f3d-48de-be9c-f033354d282e\",\"name\":\"Functions\",\"description\":null,\"parentId\":null,\"order\":0},{\"id\":\"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f\",\"name\":\"Parameters\",\"description\":\"\",\"parentId\":null,\"order\":1},{\"id\":\"bbd6ee21-6a56-4a8c-b80f-2aad18bde5a6\",\"name\":\"Facts\",\"description\":\"\",\"parentId\":null,\"order\":2},{\"id\":\"a91191ed-8efb-400b-bad7-2b8a42e2d413\",\"name\":\"Versioning\",\"description\":\"\",\"parentId\":null,\"order\":4},{\"id\":\"d535d7f0-f50c-47a1-a1c5-b52444b9ad0e\",\"name\":\"Information\",\"description\":\"Data Update Information for the Inventory Velocity Tables\",\"parentId\":null,\"order\":5},{\"id\":\"bbd12982-f4e8-47a8-b9c2-92a56f7d7c5a\",\"name\":\"Dimensions\",\"description\":\"\",\"parentId\":null,\"order\":3}]"}],"entities":[{"$type":"LocalEntity","name":"Version History Model","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History%20Model.csv"},"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-29T14:51:51.7712114+00:00","location":"https://wabiwuscpcdsap1.blob.core.windows.net:443/336746b5-97f1-4c8e-98d8-7d3fc84c2a3f/Version%20History%20Model.csv?snapshot=2022-06-29T14%3A51%3A51.2484352Z"}]},{"$type":"LocalEntity","name":"Version History Report","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History%20Report.csv"},"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-29T14:51:51.7712114+00:00","location":"https://wabiwuscpcdsap1.blob.core.windows.net:443/336746b5-97f1-4c8e-98d8-7d3fc84c2a3f/Version%20History%20Report.csv?snapshot=2022-06-29T14%3A51%3A51.2304452Z"}]},{"$type":"LocalEntity","name":"Version History","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History.csv"},"annotations":[{"name":"pbi:EntityTypeDisplayHint","value":"CalculatedEntity"}],"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-29T14:51:53.4595258+00:00","location":"https://wabiwuscpcdsap1.blob.core.windows.net:443/336746b5-97f1-4c8e-98d8-7d3fc84c2a3f/Version%20History.csv?snapshot=2022-06-29T14%3A51%3A53.4381884Z"}]},{"$type":"LocalEntity","name":"ListOfOrgs","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"ListOfOrgs.csv"},"attributes":[{"name":"Value","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-29T14:51:51.4587183+00:00","location":"https://wabiwuscpcdsap1.blob.core.windows.net:443/336746b5-97f1-4c8e-98d8-7d3fc84c2a3f/ListOfOrgs.csv?snapshot=2022-06-29T14%3A51%3A51.4303314Z"}]},{"$type":"LocalEntity","name":"Version History Dataflow","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History%20Dataflow.csv"},"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-29T14:51:51.5524528+00:00","location":"https://wabiwuscpcdsap1.blob.core.windows.net:443/336746b5-97f1-4c8e-98d8-7d3fc84c2a3f/Version%20History%20Dataflow.csv?snapshot=2022-06-29T14%3A51%3A51.5382708Z"}]},{"$type":"LocalEntity","name":"FACT_CycleCount","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"FACT_CycleCount.csv"},"attributes":[{"name":"ABC_CLASS_NAME","dataType":"string"},{"name":"ADJUSTMENT_AMOUNT","dataType":"double"},{"name":"ADJUSTMENT_DATE","dataType":"dateTime"},{"name":"ADJUSTMENT_QUANTITY","dataType":"double"},{"name":"COUNT_APPROVAL_DATE","dataType":"dateTime"},{"name":"COUNT_DATE_CURRENT","dataType":"dateTime"},{"name":"COUNT_DATE_FIRST","dataType":"dateTime"},{"name":"COUNT_DATE_PRIOR","dataType":"dateTime"},{"name":"COUNT_DUE_DATE","dataType":"dateTime"},{"name":"COUNT_LIST_SEQUENCE","dataType":"double"},{"name":"COUNT_PASS_STATUS","dataType":"string"},{"name":"COUNT_QUANTITY_CURRENT","dataType":"double"},{"name":"COUNT_QUANTITY_FIRST","dataType":"double"},{"name":"COUNT_QUANTITY_PRIOR","dataType":"double"},{"name":"COUNT_STATUS","dataType":"string"},{"name":"COUNT_UOM_CURRENT","dataType":"string"},{"name":"COUNT_UOM_FIRST","dataType":"string"},{"name":"COUNT_UOM_PRIOR","dataType":"string"},{"name":"CREATION_DATE","dataType":"dateTime"},{"name":"CURRENT_COUNT_BY","dataType":"string"},{"name":"CYCLE_COUNT_DESCRIPTION","dataType":"string"},{"name":"CYCLE_COUNT_NAME","dataType":"string"},{"name":"DISABLE_DATE","dataType":"dateTime"},{"name":"EXTRACT_DATE","dataType":"dateTime"},{"name":"FIRST_COUNT_BY","dataType":"string"},{"name":"FIRST_PASS_STATUS","dataType":"string"},{"name":"INVENTORY_ITEM_ID","dataType":"double"},{"name":"ITEM_NUMBER","dataType":"string"},{"name":"LAST_UPDATED_BY","dataType":"string"},{"name":"LOCATOR","dataType":"string"},{"name":"LOT_NUMBER","dataType":"string"},{"name":"ORGANIZATION_CODE","dataType":"string"},{"name":"PRIOR_COUNT_BY","dataType":"string"},{"name":"SERIAL_NUMBER","dataType":"string"},{"name":"SUBINVENTORY","dataType":"string"},{"name":"SYSTEM_QUANTITY_CURRENT","dataType":"double"},{"name":"SYSTEM_QUANTITY_FIRST","dataType":"double"},{"name":"SYSTEM_QUANTITY_PRIOR","dataType":"double"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-29T14:52:31.3543545+00:00","location":"https://wabiwuscpcdsap1.blob.core.windows.net:443/336746b5-97f1-4c8e-98d8-7d3fc84c2a3f/FACT_CycleCount.csv?snapshot=2022-06-29T14%3A52%3A31.3335978Z"}]},{"$type":"LocalEntity","name":"DIM_Inventory Orgs","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"DIM_Inventory%20Orgs.csv"},"attributes":[{"name":"INVORG_ID","dataType":"int64"},{"name":"OPERATING_UNIT_ID","dataType":"string"},{"name":"LEDGER_ID","dataType":"string"},{"name":"GL_ENTITY","dataType":"string"},{"name":"Operating Unit","dataType":"string"},{"name":"LEDGER","dataType":"string"},{"name":"INVORG_CODE","dataType":"string"},{"name":"CURRENCY_CODE","dataType":"string"},{"name":"Inventory Org Category","dataType":"string"},{"name":"INV_ORG_CODE_CUSTOWNED","dataType":"string"},{"name":"TIMEZONE","dataType":"string"},{"name":"DISABLE_DATE","dataType":"date"},{"name":"CREATION_DATE","dataType":"dateTime"},{"name":"CREATED_BY_LOGIN","dataType":"string"},{"name":"LAST_UPDATE_DATE","dataType":"dateTime"},{"name":"LAST_UPDATE_LOGIN","dataType":"string"},{"name":"INVORG_GROUP","dataType":"string"},{"name":"LABOR_TARGET_PCT","dataType":"double"},{"name":"BASELINE_FYFQ","dataType":"string"},{"name":"COUNTRY_CODE","dataType":"string"},{"name":"INVORG_TYPE","dataType":"string"},{"name":"REPORTING_PRODUCT_GROUP","dataType":"string"},{"name":"REPORTING_OWNED_BY","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-29T14:52:02.8733067+00:00","location":"https://wabiwuscpcdsap1.blob.core.windows.net:443/336746b5-97f1-4c8e-98d8-7d3fc84c2a3f/DIM_Inventory%20Orgs.csv?snapshot=2022-06-29T14%3A52%3A02.8468284Z"}]}]}