{"name":"Flow_Data-History","description":"Flow for loading history data.\nWO-Completion & Wo-Failures.\nVHP, MP, LP","version":"1.0","culture":"de-DE","modifiedTime":"2022-05-19T07:41:43.5433521+00:00","pbi:mashup":{"fastCombine":true,"allowNativeQueries":false,"queriesMetadata":{"parToken":{"queryId":"3ef5e476-1eeb-4e42-9ec8-e0e74e559b62","queryName":"parToken"},"parTargetDeplBaseURL":{"queryId":"e7147a99-7575-4550-ab00-e1d15586fd39","queryName":"parTargetDeplBaseURL"},"parStartDate":{"queryId":"111293ba-b26a-46ed-b9d0-adfbaf07c360","queryName":"parStartDate"},"parEndDate":{"queryId":"4cdd31b9-3a10-4bff-aecb-df80c34f80fb","queryName":"parEndDate"},"API_WOFailures_VHP":{"queryId":"870e3e6b-2a1a-437b-93c1-de8e05bcbe1f","queryName":"API_WOFailures_VHP","queryGroupId":"145e558f-70dc-4562-861c-1ca2975a0b47"},"API_WOFailures_MP":{"queryId":"7e1a0625-1491-4dfb-b135-dd04e8468753","queryName":"API_WOFailures_MP","queryGroupId":"145e558f-70dc-4562-861c-1ca2975a0b47"},"API_WOFailures_LP":{"queryId":"c7fb697d-19b4-42d4-b8b6-51d511769532","queryName":"API_WOFailures_LP","queryGroupId":"145e558f-70dc-4562-861c-1ca2975a0b47"},"WOFailures_API":{"queryId":"36f8152c-c840-439f-ad2f-810beb781d1f","queryName":"WOFailures_API","loadEnabled":true},"API_WOCompletion_VHP1":{"queryId":"dde60571-9699-4944-8093-23bb567f63f1","queryName":"API_WOCompletion_VHP1","queryGroupId":"145e558f-70dc-4562-861c-1ca2975a0b47"},"API_WOCompletion_VHP2":{"queryId":"1cf684ae-1412-41a6-a11b-28b68b907107","queryName":"API_WOCompletion_VHP2","queryGroupId":"145e558f-70dc-4562-861c-1ca2975a0b47"},"API_WOCompletion_MP":{"queryId":"e0ff5145-b9f6-47f8-8adc-bb531eebc5e7","queryName":"API_WOCompletion_MP","queryGroupId":"145e558f-70dc-4562-861c-1ca2975a0b47"},"API_WOCompletion_LP":{"queryId":"5084479e-1cc5-4304-be17-8da7ab0ba4f2","queryName":"API_WOCompletion_LP","queryGroupId":"145e558f-70dc-4562-861c-1ca2975a0b47"},"WOCompletion_API":{"queryId":"2b8fbabe-d2be-449c-be68-85ee2a5b2343","queryName":"WOCompletion_API","loadEnabled":true},"WO_SN_Deviations_API":{"queryId":"a7d554c4-5fab-4d41-8570-3270fe8856e7","queryName":"WO_SN_Deviations_API","loadEnabled":true},"Deviations_API":{"queryId":"d99d59b7-4064-4894-8af3-4fa71d8eaf99","queryName":"Deviations_API","loadEnabled":true},"CustomReport_EMO_API":{"queryId":"1bc0f313-8da6-4d8c-8bfd-d8979bf6bea9","queryName":"CustomReport_EMO_API","loadEnabled":true},"API_CustomRep_EMO_Y19-20_GEP":{"queryId":"628f0020-b0ed-44e8-b2b4-6ab7e56a2395","queryName":"API_CustomRep_EMO_Y19-20_GEP","queryGroupId":"da8fd51d-52a4-4f2c-83c7-5374b9ce23b3"},"API_CustomRep_EMO_Y21_GEP":{"queryId":"db3f2991-d3c6-481f-94bc-aed29a54bd13","queryName":"API_CustomRep_EMO_Y21_GEP","queryGroupId":"da8fd51d-52a4-4f2c-83c7-5374b9ce23b3"},"API_CustomRep_EMO_Y19-20_KEP":{"queryId":"7072d51e-b8ed-44ac-9655-324e8f458d57","queryName":"API_CustomRep_EMO_Y19-20_KEP","queryGroupId":"da8fd51d-52a4-4f2c-83c7-5374b9ce23b3"},"API_CustomRep_EMO_Y21_KEP":{"queryId":"b4cac7fa-e8db-4618-bdbe-99348e42d843","queryName":"API_CustomRep_EMO_Y21_KEP","queryGroupId":"da8fd51d-52a4-4f2c-83c7-5374b9ce23b3"}},"document":"section Section1;\r\nshared parToken = let\r\n  parToken = \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyIsImtpZCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyJ9.eyJhdWQiOiJodHRwczovL2NvaHJpbmMub25taWNyb3NvZnQuY29tL0N1bXVsdXNBUEkiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8yZmFjN2NkZC03ZjY3LTQzNjItOTBmMi0zNThiZGJiOGY4MTIvIiwiaWF0IjoxNjUyOTQ1NTA3LCJuYmYiOjE2NTI5NDU1MDcsImV4cCI6MTY1Mjk1MTA4MCwiYWNyIjoiMSIsImFpbyI6IkUyWmdZR2orY3JoQWYzL282NVZ6bVA4c0Q0bGttS2pvdzEyWEVjUVRrVld4VUYzZitCb0EiLCJhbXIiOlsid2lhIl0sImFwcGlkIjoiZmJkNWMxM2EtNWM4MC00YWRmLWFkZGItZDAzMDRjMTJjZjJiIiwiYXBwaWRhY3IiOiIwIiwiZmFtaWx5X25hbWUiOiJBbGJlcnMiLCJnaXZlbl9uYW1lIjoiRGFuaWVsIiwiaXBhZGRyIjoiMjEyLjE4NC45NC4yMSIsIm5hbWUiOiJBbGJlcnMsIERhbmllbCIsIm9pZCI6Ijg0ZjBkOGY2LTEyYTEtNDlmZi05NTNiLTA3NTk3OTk1NzQyMSIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS0xOTU3OTk0NDg4LTE4NDQyMzc2MTUtMTgwMTY3NDUzMS0zMTU0NSIsInJoIjoiMC5BVmtBM1h5c0wyZF9Za09ROGpXTDI3ajRFb09GamJGYUg2eE5sa2Fud25yOTBEZFpBSVEuIiwic2NwIjoidXNlcl9pbXBlcnNvbmF0aW9uIiwic3ViIjoic0xIYU9RNjQ1TDJCY1BkUW01ZzBLTTlnLXpObWlJenk4c1NIb2hGcVNZcyIsInRpZCI6IjJmYWM3Y2RkLTdmNjctNDM2Mi05MGYyLTM1OGJkYmI4ZjgxMiIsInVuaXF1ZV9uYW1lIjoiRGFuaWVsLkFsYmVyc0Bjb2hlcmVudC5jb20iLCJ1cG4iOiJEYW5pZWwuQWxiZXJzQGNvaGVyZW50LmNvbSIsInV0aSI6InZCNUM4WHljYTB5WFdkX0dZMjQ4QUEiLCJ2ZXIiOiIxLjAifQ.lQQnSgZ-8EdVHaxSkWMuDhXwdSNSaR2GfHmd6mp2uXCKwP60r1H7CDS0oHa0JjQGOhkQEXcrhdQ0SEWFYIPvwVfjMzUOmUt6vdaBblpfgbJuZ1_39UOPDKaGkuqVLMXY0HQHhDHxYike6aJ1JPlZioMi8cKoTtaq2m9n-pU9jdRO11D-zcit2_n_s0AsUjE1XTQDC-42St4tQGgplgdKWWy_fs2w6GRQAPbrZaPCAuYggcCxVSwQjxOqy6Xbz9rakbEmycra0ZjAzkC5jYrH3OsKr1qXsj56IJbdQMlYl1uK7aw0Qm7q7X9jRfTLUvd9Jo-A8p2grJCgr8ZZW_AYhQ\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text]\r\nin\r\n  parToken;\r\nshared parTargetDeplBaseURL = let\r\n  parTargetDeplBaseURL = \"https://prod-cumulus.azurefd.net/prod/reporting/v1.0/api/\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text]\r\nin\r\n  parTargetDeplBaseURL;\r\nshared parStartDate = let\r\n  parStartDate = \"2015-09-30\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text]\r\nin\r\n  parStartDate;\r\nshared parEndDate = let\r\n  parEndYear = \"2021-12-31\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text]\r\nin\r\n  parEndYear;\r\nshared API_WOFailures_VHP = let\r\n  Quelle = Json.Document(Web.Contents(parTargetDeplBaseURL &\"WOFailures/Production/false/\" &parStartDate &\"/\" &parEndDate & \"/GEP/VHP/VHP%20Production\", [Headers=[Authorization=parToken]])),\r\n  WOFailuresList = Quelle[WOFAILURESLIST],\r\n  #\"In Tabelle konvertiert\" = Table.FromList(WOFailuresList, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"In Tabelle konvertiert\", \"Column1\", {\"WORK_ORDER\", \"FAILURE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"PROCESS\", \"PROCESS_DESCRIPTION\", \"QTY_REJECTED\", \"FAILURE_GROUP\", \"FAILURE\", \"REJECTED_BY\", \"REJECT_TYPE\", \"FAILURE_NOTES\", \"EST_EFFORT_HRS\", \"ROOT_CAUSE_GROUP\", \"ROOT_CAUSE\", \"NCR\", \"WORKORDER_NOTES\"}, {\"WORK_ORDER\", \"FAILURE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"PROCESS\", \"PROCESS_DESCRIPTION\", \"QTY_REJECTED\", \"FAILURE_GROUP\", \"FAILURE\", \"REJECTED_BY\", \"REJECT_TYPE\", \"FAILURE_NOTES\", \"EST_EFFORT_HRS\", \"ROOT_CAUSE_GROUP\", \"ROOT_CAUSE\", \"NCR\", \"WORKORDER_NOTES\"}),\r\n  #\"Ge채nderter Typ\" = Table.TransformColumnTypes(#\"Expanded Column1\", {{\"FAILURE_DATE\", type date}}),\r\n  #\"Choose columns\" = Table.SelectColumns(#\"Ge채nderter Typ\", {\"WORK_ORDER\", \"FAILURE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"PROCESS\", \"QTY_REJECTED\", \"FAILURE_GROUP\", \"FAILURE\", \"REJECTED_BY\", \"REJECT_TYPE\", \"FAILURE_NOTES\"}),\r\n  #\"Changed Type\" = Table.TransformColumnTypes(#\"Choose columns\", {{\"FAILURE_DATE\", type date}, {\"ORACLE_WO\", type text}, {\"WORK_ORDER\", type text}, {\"STATUS\", type text}, {\"ORG\", type text}, {\"FLOW\", type text}, {\"QTY\", type number}, {\"TYPE\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"DESCRIPTION\", type text}, {\"CURRENT_PROCESS\", type text}, {\"PROCESS\", type text}, {\"QTY_REJECTED\", type number}, {\"FAILURE_GROUP\", type text}, {\"FAILURE\", type text}, {\"REJECTED_BY\", type text}, {\"REJECT_TYPE\", type text}, {\"FAILURE_NOTES\", type text}}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Changed Type\", \"Sandbox\", each \"VHP\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Added custom\", {{\"Sandbox\", type text}})\r\nin\r\n  #\"Changed column type\";\r\nshared API_WOFailures_MP = let\r\n  Quelle = Json.Document(Web.Contents(parTargetDeplBaseURL &\"WOFailures/Production/false/\" &parStartDate &\"/\" &parEndDate & \"/GEP/MP/MP%20Production\", [Headers=[Authorization=parToken]])),\r\n  WOFailuresList = Quelle[WOFAILURESLIST],\r\n  #\"In Tabelle konvertiert\" = Table.FromList(WOFailuresList, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"In Tabelle konvertiert\", \"Column1\", {\"WORK_ORDER\", \"FAILURE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"PROCESS\", \"PROCESS_DESCRIPTION\", \"QTY_REJECTED\", \"FAILURE_GROUP\", \"FAILURE\", \"REJECTED_BY\", \"REJECT_TYPE\", \"FAILURE_NOTES\", \"EST_EFFORT_HRS\", \"ROOT_CAUSE_GROUP\", \"ROOT_CAUSE\", \"NCR\", \"WORKORDER_NOTES\"}, {\"WORK_ORDER\", \"FAILURE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"PROCESS\", \"PROCESS_DESCRIPTION\", \"QTY_REJECTED\", \"FAILURE_GROUP\", \"FAILURE\", \"REJECTED_BY\", \"REJECT_TYPE\", \"FAILURE_NOTES\", \"EST_EFFORT_HRS\", \"ROOT_CAUSE_GROUP\", \"ROOT_CAUSE\", \"NCR\", \"WORKORDER_NOTES\"}),\r\n  #\"Ge채nderter Typ\" = Table.TransformColumnTypes(#\"Expanded Column1\", {{\"FAILURE_DATE\", type date}}),\r\n  #\"Choose columns\" = Table.SelectColumns(#\"Ge채nderter Typ\", {\"WORK_ORDER\", \"FAILURE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"PROCESS\", \"QTY_REJECTED\", \"FAILURE_GROUP\", \"FAILURE\", \"REJECTED_BY\", \"REJECT_TYPE\", \"FAILURE_NOTES\"}),\r\n  #\"Changed Type\" = Table.TransformColumnTypes(#\"Choose columns\", {{\"FAILURE_DATE\", type date}, {\"ORACLE_WO\", type text}, {\"WORK_ORDER\", type text}, {\"STATUS\", type text}, {\"ORG\", type text}, {\"FLOW\", type text}, {\"QTY\", type number}, {\"TYPE\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"DESCRIPTION\", type text}, {\"CURRENT_PROCESS\", type text}, {\"PROCESS\", type text}, {\"QTY_REJECTED\", type number}, {\"FAILURE_GROUP\", type text}, {\"FAILURE\", type text}, {\"REJECTED_BY\", type text}, {\"REJECT_TYPE\", type text}, {\"FAILURE_NOTES\", type text}}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Changed Type\", \"Sandbox\", each \"MP\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Added custom\", {{\"Sandbox\", type text}})\r\nin\r\n  #\"Changed column type\";\r\nshared API_WOFailures_LP = let\r\n  Quelle = Json.Document(Web.Contents(parTargetDeplBaseURL &\"WOFailures/Production/false/\" &parStartDate &\"/\" &parEndDate & \"/GEP/LP/LP%20Production\", [Headers=[Authorization=parToken]])),\r\n  WOFailuresList = Quelle[WOFAILURESLIST],\r\n  #\"In Tabelle konvertiert\" = Table.FromList(WOFailuresList, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"In Tabelle konvertiert\", \"Column1\", {\"WORK_ORDER\", \"FAILURE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"PROCESS\", \"PROCESS_DESCRIPTION\", \"QTY_REJECTED\", \"FAILURE_GROUP\", \"FAILURE\", \"REJECTED_BY\", \"REJECT_TYPE\", \"FAILURE_NOTES\", \"EST_EFFORT_HRS\", \"ROOT_CAUSE_GROUP\", \"ROOT_CAUSE\", \"NCR\", \"WORKORDER_NOTES\"}, {\"WORK_ORDER\", \"FAILURE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"PROCESS\", \"PROCESS_DESCRIPTION\", \"QTY_REJECTED\", \"FAILURE_GROUP\", \"FAILURE\", \"REJECTED_BY\", \"REJECT_TYPE\", \"FAILURE_NOTES\", \"EST_EFFORT_HRS\", \"ROOT_CAUSE_GROUP\", \"ROOT_CAUSE\", \"NCR\", \"WORKORDER_NOTES\"}),\r\n  #\"Ge채nderter Typ\" = Table.TransformColumnTypes(#\"Expanded Column1\", {{\"FAILURE_DATE\", type date}}),\r\n  #\"Choose columns\" = Table.SelectColumns(#\"Ge채nderter Typ\", {\"WORK_ORDER\", \"FAILURE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"PROCESS\", \"QTY_REJECTED\", \"FAILURE_GROUP\", \"FAILURE\", \"REJECTED_BY\", \"REJECT_TYPE\", \"FAILURE_NOTES\"}),\r\n  #\"Changed Type\" = Table.TransformColumnTypes(#\"Choose columns\", {{\"FAILURE_DATE\", type date}, {\"ORACLE_WO\", type text}, {\"WORK_ORDER\", type text}, {\"STATUS\", type text}, {\"ORG\", type text}, {\"FLOW\", type text}, {\"QTY\", type number}, {\"TYPE\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"DESCRIPTION\", type text}, {\"CURRENT_PROCESS\", type text}, {\"PROCESS\", type text}, {\"QTY_REJECTED\", type number}, {\"FAILURE_GROUP\", type text}, {\"FAILURE\", type text}, {\"REJECTED_BY\", type text}, {\"REJECT_TYPE\", type text}, {\"FAILURE_NOTES\", type text}}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Changed Type\", \"Sandbox\", each \"LP\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Added custom\", {{\"Sandbox\", type text}})\r\nin\r\n  #\"Changed column type\";\r\nshared WOFailures_API = let\r\n  Source = Table.Combine({API_WOFailures_VHP, API_WOFailures_MP, API_WOFailures_LP}),\r\n  #\"Reordered columns\" = Table.ReorderColumns(Source, {\"Sandbox\", \"CURRENT_PROCESS\", \"DESCRIPTION\", \"FAILURE\", \"FAILURE_DATE\", \"FAILURE_GROUP\", \"FAILURE_NOTES\", \"FLOW\", \"ORACLE_WO\", \"ORG\", \"PART_NUMBER\", \"PROCESS\", \"QTY\", \"QTY_REJECTED\", \"REJECTED_BY\", \"REJECT_TYPE\", \"SERIAL_NUMBER\", \"STATUS\", \"TYPE\", \"WORK_ORDER\"})\r\nin\r\n  #\"Reordered columns\";\r\nshared API_WOCompletion_VHP1 = let\r\n  Source = Json.Document(Web.Contents(parTargetDeplBaseURL &\"WOCompletion/Production/false/\" &parStartDate &\"/2018-12-31/GEP/VHP/VHP%20Production\", [Headers=[Authorization=parToken]])),\r\n  WOCompletionList = Source[WOCOMPLETIONLIST],\r\n  #\"Converted to Table\" = Table.FromList(WOCompletionList, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"SERVICE_CUSTOMER\", \"SERVICE_REFERENCE_NUMBER\", \"RMA_NUMBER\", \"SERVICE_BILLING_TYPE\", \"CHARGE_PARTS\", \"CHARGE_LABOR\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}, {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"SERVICE_CUSTOMER\", \"SERVICE_REFERENCE_NUMBER\", \"RMA_NUMBER\", \"SERVICE_BILLING_TYPE\", \"CHARGE_PARTS\", \"CHARGE_LABOR\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}),\r\n  #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\", {{\"WORK_ORDER\", type text}, {\"COMPLETE_DATE\", type datetime}, {\"STATUS\", type text}, {\"ORG\", type text}, {\"FLOW\", type text}, {\"ORACLE_WO\", type text}, {\"QTY\", Int64.Type}, {\"TYPE\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"DESCRIPTION\", type text}, {\"CURRENT_PROCESS\", type text}, {\"SALES_ORDER\", type text}, {\"CUSTOMER\", type text}, {\"SCHEDULE_DATE\", type datetime}, {\"SERVICE_CUSTOMER\", type text}, {\"SERVICE_REFERENCE_NUMBER\", type text}, {\"RMA_NUMBER\", type text}, {\"SERVICE_BILLING_TYPE\", type text}, {\"CHARGE_PARTS\", type text}, {\"CHARGE_LABOR\", type text}, {\"CYCLE_TIME_WORKORDER_MINUTES\", Int64.Type}, {\"CYCLE_TIME_SERIES_MINUTES\", Int64.Type}, {\"CREATE_DATE\", type datetime}, {\"DEVIATIONS\", type text}, {\"SERIES\", Int64.Type}}),\r\n  #\"Removed Other Columns\" = Table.SelectColumns(#\"Changed Type\", {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Removed Other Columns\", \"Sandbox\", each \"VHP\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Added custom\", {{\"Sandbox\", type text}})\r\nin\r\n  #\"Changed column type\";\r\nshared API_WOCompletion_VHP2 = let\r\n  Source = Json.Document(Web.Contents(parTargetDeplBaseURL &\"WOCompletion/Production/false/2018-12-31/\" &parEndDate &\"/GEP/VHP/VHP%20Production\", [Headers=[Authorization=parToken]])),\r\n  WOCompletionList = Source[WOCOMPLETIONLIST],\r\n  #\"Converted to Table\" = Table.FromList(WOCompletionList, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"SERVICE_CUSTOMER\", \"SERVICE_REFERENCE_NUMBER\", \"RMA_NUMBER\", \"SERVICE_BILLING_TYPE\", \"CHARGE_PARTS\", \"CHARGE_LABOR\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}, {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"SERVICE_CUSTOMER\", \"SERVICE_REFERENCE_NUMBER\", \"RMA_NUMBER\", \"SERVICE_BILLING_TYPE\", \"CHARGE_PARTS\", \"CHARGE_LABOR\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}),\r\n  #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\", {{\"WORK_ORDER\", type text}, {\"COMPLETE_DATE\", type datetime}, {\"STATUS\", type text}, {\"ORG\", type text}, {\"FLOW\", type text}, {\"ORACLE_WO\", type text}, {\"QTY\", Int64.Type}, {\"TYPE\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"DESCRIPTION\", type text}, {\"CURRENT_PROCESS\", type text}, {\"SALES_ORDER\", type text}, {\"CUSTOMER\", type text}, {\"SCHEDULE_DATE\", type datetime}, {\"SERVICE_CUSTOMER\", type text}, {\"SERVICE_REFERENCE_NUMBER\", type text}, {\"RMA_NUMBER\", type text}, {\"SERVICE_BILLING_TYPE\", type text}, {\"CHARGE_PARTS\", type text}, {\"CHARGE_LABOR\", type text}, {\"CYCLE_TIME_WORKORDER_MINUTES\", Int64.Type}, {\"CYCLE_TIME_SERIES_MINUTES\", Int64.Type}, {\"CREATE_DATE\", type datetime}, {\"DEVIATIONS\", type text}, {\"SERIES\", Int64.Type}}),\r\n  #\"Removed Other Columns\" = Table.SelectColumns(#\"Changed Type\", {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Removed Other Columns\", \"Sandbox\", each \"VHP\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Added custom\", {{\"Sandbox\", type text}})\r\nin\r\n  #\"Changed column type\";\r\nshared API_WOCompletion_MP = let\r\n  Source = Json.Document(Web.Contents(parTargetDeplBaseURL &\"WOCompletion/Production/false/\" &parStartDate &\"/\" &parEndDate &\"/GEP/MP/MP%20Production\", [Headers=[Authorization=parToken]])),\r\n  WOCompletionList = Source[WOCOMPLETIONLIST],\r\n  #\"Converted to Table\" = Table.FromList(WOCompletionList, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"SERVICE_CUSTOMER\", \"SERVICE_REFERENCE_NUMBER\", \"RMA_NUMBER\", \"SERVICE_BILLING_TYPE\", \"CHARGE_PARTS\", \"CHARGE_LABOR\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}, {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"SERVICE_CUSTOMER\", \"SERVICE_REFERENCE_NUMBER\", \"RMA_NUMBER\", \"SERVICE_BILLING_TYPE\", \"CHARGE_PARTS\", \"CHARGE_LABOR\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}),\r\n  #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\", {{\"WORK_ORDER\", type text}, {\"COMPLETE_DATE\", type datetime}, {\"STATUS\", type text}, {\"ORG\", type text}, {\"FLOW\", type text}, {\"ORACLE_WO\", type text}, {\"QTY\", Int64.Type}, {\"TYPE\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"DESCRIPTION\", type text}, {\"CURRENT_PROCESS\", type text}, {\"SALES_ORDER\", type text}, {\"CUSTOMER\", type text}, {\"SCHEDULE_DATE\", type datetime}, {\"SERVICE_CUSTOMER\", type text}, {\"SERVICE_REFERENCE_NUMBER\", type text}, {\"RMA_NUMBER\", type text}, {\"SERVICE_BILLING_TYPE\", type text}, {\"CHARGE_PARTS\", type text}, {\"CHARGE_LABOR\", type text}, {\"CYCLE_TIME_WORKORDER_MINUTES\", Int64.Type}, {\"CYCLE_TIME_SERIES_MINUTES\", Int64.Type}, {\"CREATE_DATE\", type datetime}, {\"DEVIATIONS\", type text}, {\"SERIES\", Int64.Type}}),\r\n  #\"Removed Other Columns\" = Table.SelectColumns(#\"Changed Type\", {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Removed Other Columns\", \"Sandbox\", each \"MP\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Added custom\", {{\"Sandbox\", type text}})\r\nin\r\n  #\"Changed column type\";\r\nshared API_WOCompletion_LP = let\r\n  Source = Json.Document(Web.Contents(parTargetDeplBaseURL &\"WOCompletion/Production/false/\" &parStartDate &\"/\" &parEndDate &\"/GEP/LP/LP%20Production\", [Headers=[Authorization=parToken]])),\r\n  WOCompletionList = Source[WOCOMPLETIONLIST],\r\n  #\"Converted to Table\" = Table.FromList(WOCompletionList, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"SERVICE_CUSTOMER\", \"SERVICE_REFERENCE_NUMBER\", \"RMA_NUMBER\", \"SERVICE_BILLING_TYPE\", \"CHARGE_PARTS\", \"CHARGE_LABOR\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}, {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"SERVICE_CUSTOMER\", \"SERVICE_REFERENCE_NUMBER\", \"RMA_NUMBER\", \"SERVICE_BILLING_TYPE\", \"CHARGE_PARTS\", \"CHARGE_LABOR\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}),\r\n  #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Column1\", {{\"WORK_ORDER\", type text}, {\"COMPLETE_DATE\", type datetime}, {\"STATUS\", type text}, {\"ORG\", type text}, {\"FLOW\", type text}, {\"ORACLE_WO\", type text}, {\"QTY\", Int64.Type}, {\"TYPE\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"DESCRIPTION\", type text}, {\"CURRENT_PROCESS\", type text}, {\"SALES_ORDER\", type text}, {\"CUSTOMER\", type text}, {\"SCHEDULE_DATE\", type datetime}, {\"SERVICE_CUSTOMER\", type text}, {\"SERVICE_REFERENCE_NUMBER\", type text}, {\"RMA_NUMBER\", type text}, {\"SERVICE_BILLING_TYPE\", type text}, {\"CHARGE_PARTS\", type text}, {\"CHARGE_LABOR\", type text}, {\"CYCLE_TIME_WORKORDER_MINUTES\", Int64.Type}, {\"CYCLE_TIME_SERIES_MINUTES\", Int64.Type}, {\"CREATE_DATE\", type datetime}, {\"DEVIATIONS\", type text}, {\"SERIES\", Int64.Type}}),\r\n  #\"Removed Other Columns\" = Table.SelectColumns(#\"Changed Type\", {\"WORK_ORDER\", \"COMPLETE_DATE\", \"STATUS\", \"ORG\", \"FLOW\", \"ORACLE_WO\", \"QTY\", \"TYPE\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"DESCRIPTION\", \"CURRENT_PROCESS\", \"SALES_ORDER\", \"CUSTOMER\", \"SCHEDULE_DATE\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"CYCLE_TIME_SERIES_MINUTES\", \"CREATE_DATE\", \"DEVIATIONS\", \"SERIES\"}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Removed Other Columns\", \"Sandbox\", each \"LP\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Added custom\", {{\"Sandbox\", type text}})\r\nin\r\n  #\"Changed column type\";\r\nshared WOCompletion_API = let\r\n  Source = Table.Combine({API_WOCompletion_VHP1, API_WOCompletion_VHP2, API_WOCompletion_MP, API_WOCompletion_LP}),\r\n  #\"Duplicated column\" = Table.DuplicateColumn(Source, \"COMPLETE_DATE\", \"COMPLETE_DATE - Copy\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Duplicated column\", {{\"COMPLETE_DATE - Copy\", type date}}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Changed column type\", {{\"COMPLETE_DATE\", \"COMPLETE_DateTime\"}, {\"CREATE_DATE\", \"CREATE_DateTime\"}, {\"COMPLETE_DATE - Copy\", \"COMPLETE_Date\"}}),\r\n  #\"Reordered columns\" = Table.ReorderColumns(#\"Renamed columns\", {\"Sandbox\", \"COMPLETE_DateTime\", \"CREATE_DateTime\", \"CURRENT_PROCESS\", \"CUSTOMER\", \"CYCLE_TIME_SERIES_MINUTES\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"DESCRIPTION\", \"DEVIATIONS\", \"FLOW\", \"ORACLE_WO\", \"ORG\", \"PART_NUMBER\", \"QTY\", \"SALES_ORDER\", \"SCHEDULE_DATE\", \"SERIAL_NUMBER\", \"STATUS\", \"TYPE\", \"WORK_ORDER\", \"COMPLETE_Date\"}),\r\n  #\"Sorted rows\" = Table.Sort(#\"Reordered columns\", {{\"COMPLETE_DateTime\", Order.Descending}})\r\nin\r\n  #\"Sorted rows\";\r\nshared WO_SN_Deviations_API = let\r\n  Source = Table.Combine({API_WOCompletion_VHP1, API_WOCompletion_VHP2, API_WOCompletion_MP, API_WOCompletion_LP}),\r\n  #\"Duplicated column\" = Table.DuplicateColumn(Source, \"COMPLETE_DATE\", \"COMPLETE_DATE - Copy\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Duplicated column\", {{\"COMPLETE_DATE - Copy\", type date}}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Changed column type\", {{\"COMPLETE_DATE\", \"COMPLETE_DateTime\"}, {\"CREATE_DATE\", \"CREATE_DateTime\"}, {\"COMPLETE_DATE - Copy\", \"COMPLETE_Date\"}}),\r\n  #\"Reordered columns\" = Table.ReorderColumns(#\"Renamed columns\", {\"Sandbox\", \"COMPLETE_DateTime\", \"CREATE_DateTime\", \"CURRENT_PROCESS\", \"CUSTOMER\", \"CYCLE_TIME_SERIES_MINUTES\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"DESCRIPTION\", \"DEVIATIONS\", \"FLOW\", \"ORACLE_WO\", \"ORG\", \"PART_NUMBER\", \"QTY\", \"SALES_ORDER\", \"SCHEDULE_DATE\", \"SERIAL_NUMBER\", \"STATUS\", \"TYPE\", \"WORK_ORDER\", \"COMPLETE_Date\"}),\r\n  #\"Choose columns\" = Table.SelectColumns(#\"Reordered columns\", {\"Sandbox\", \"DEVIATIONS\", \"SERIAL_NUMBER\", \"WORK_ORDER\"}),\r\n  #\"Filtered rows 1\" = Table.SelectRows(#\"Choose columns\", each [DEVIATIONS] <> null),\r\n  #\"Reordered columns 2\" = Table.ReorderColumns(#\"Filtered rows 1\", {\"WORK_ORDER\", \"DEVIATIONS\"}),\r\n  #\"Split column by delimiter\" = Table.SplitColumn(#\"Reordered columns 2\", \"DEVIATIONS\", Splitter.SplitTextByDelimiter(\",\"), {\"DEVIATIONS.1\", \"DEVIATIONS.2\", \"DEVIATIONS.3\", \"DEVIATIONS.4\", \"DEVIATIONS.5\", \"DEVIATIONS.6\", \"DEVIATIONS.7\"}),\r\n  #\"Changed column type 1\" = Table.TransformColumnTypes(#\"Split column by delimiter\", {{\"DEVIATIONS.1\", type text}, {\"DEVIATIONS.2\", type text}, {\"DEVIATIONS.3\", type text}, {\"DEVIATIONS.4\", type text}, {\"DEVIATIONS.5\", type text}, {\"DEVIATIONS.6\", type text}, {\"DEVIATIONS.7\", type text}}),\r\n  #\"Unpivoted other columns 1\" = Table.UnpivotOtherColumns(#\"Changed column type 1\", {\"WORK_ORDER\", \"SERIAL_NUMBER\", \"Sandbox\"}, \"Attribute\", \"Value\"),\r\n  #\"Removed columns\" = Table.RemoveColumns(#\"Unpivoted other columns 1\", {\"Attribute\"}),\r\n  #\"Filtered rows 2\" = Table.SelectRows(#\"Removed columns\", each Text.StartsWith([Value], \"S\")),\r\n  #\"Extracted first characters\" = Table.TransformColumns(#\"Filtered rows 2\", {{\"Value\", each Text.Start(_, 6), type text}}),\r\n  #\"Renamed columns 1\" = Table.RenameColumns(#\"Extracted first characters\", {{\"Value\", \"Deviation\"}})\r\nin\r\n  #\"Renamed columns 1\";\r\nshared Deviations_API = let\r\n  Source = Table.Combine({API_WOCompletion_VHP1, API_WOCompletion_VHP2, API_WOCompletion_MP, API_WOCompletion_LP}),\r\n  #\"Duplicated column\" = Table.DuplicateColumn(Source, \"COMPLETE_DATE\", \"COMPLETE_DATE - Copy\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Duplicated column\", {{\"COMPLETE_DATE - Copy\", type date}}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Changed column type\", {{\"COMPLETE_DATE\", \"COMPLETE_DateTime\"}, {\"CREATE_DATE\", \"CREATE_DateTime\"}, {\"COMPLETE_DATE - Copy\", \"COMPLETE_Date\"}}),\r\n  #\"Reordered columns\" = Table.ReorderColumns(#\"Renamed columns\", {\"Sandbox\", \"COMPLETE_DateTime\", \"CREATE_DateTime\", \"CURRENT_PROCESS\", \"CUSTOMER\", \"CYCLE_TIME_SERIES_MINUTES\", \"CYCLE_TIME_WORKORDER_MINUTES\", \"DESCRIPTION\", \"DEVIATIONS\", \"FLOW\", \"ORACLE_WO\", \"ORG\", \"PART_NUMBER\", \"QTY\", \"SALES_ORDER\", \"SCHEDULE_DATE\", \"SERIAL_NUMBER\", \"STATUS\", \"TYPE\", \"WORK_ORDER\", \"COMPLETE_Date\"}),\r\n  #\"Choose columns\" = Table.SelectColumns(#\"Reordered columns\", {\"Sandbox\", \"DEVIATIONS\"}),\r\n  #\"Extracted text before delimiter\" = Table.TransformColumns(#\"Choose columns\", {{\"Sandbox\", each Text.BeforeDelimiter(_, \"-\", 0), type text}}),\r\n  #\"Filtered rows 1\" = Table.SelectRows(#\"Extracted text before delimiter\", each [DEVIATIONS] <> null),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Filtered rows 1\", {\"DEVIATIONS\"}),\r\n  #\"Split column by delimiter\" = Table.SplitColumn(#\"Removed duplicates\", \"DEVIATIONS\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.None), {\"DEVIATIONS.1\", \"DEVIATIONS.2\", \"DEVIATIONS.3\", \"DEVIATIONS.4\", \"DEVIATIONS.5\", \"DEVIATIONS.6\", \"DEVIATIONS.7\"}),\r\n  #\"Unpivoted other columns\" = Table.UnpivotOtherColumns(#\"Split column by delimiter\", {\"Sandbox\"}, \"Attribute\", \"Value\"),\r\n  #\"Removed columns\" = Table.RemoveColumns(#\"Unpivoted other columns\", {\"Attribute\"}),\r\n  #\"Filtered rows 2\" = Table.SelectRows(#\"Removed columns\", each Text.StartsWith([Value], \"S\")),\r\n  #\"Duplicated column 2\" = Table.DuplicateColumn(#\"Filtered rows 2\", \"Value\", \"Value - Copy\"),\r\n  #\"Extracted first characters\" = Table.TransformColumns(#\"Duplicated column 2\", {{\"Value\", each Text.Start(_, 6), type text}}),\r\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Extracted first characters\", {{\"Value - Copy\", each Text.AfterDelimiter(_, \" \", 0), type text}}),\r\n  #\"Renamed columns 1\" = Table.RenameColumns(#\"Extracted text after delimiter\", {{\"Value\", \"Deviation\"}, {\"Value - Copy\", \"Deviation Description\"}}),\r\n  #\"Removed duplicates 1\" = Table.Distinct(#\"Renamed columns 1\", {\"Deviation\"})\r\nin\r\n  #\"Removed duplicates 1\";\r\nshared CustomReport_EMO_API = let\r\n  Source = Table.Combine({#\"API_CustomRep_EMO_Y19-20_KEP\", #\"API_CustomRep_EMO_Y19-20_GEP\", API_CustomRep_EMO_Y21_GEP, API_CustomRep_EMO_Y21_KEP})\r\nin\r\n  Source;\r\nshared #\"API_CustomRep_EMO_Y19-20_GEP\" = let\r\n  Source = Json.Document(Web.Contents(parTargetDeplBaseURL &\"CustomReportData/Production/GEP/VHP/VHP Production/ME-PBI-CR-EMO/2018-12-31/2021-01-01/GEP\", [Headers=[Authorization=parToken]])),\r\n  #\"Converted to table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to table\", \"Column1\", {\"WORK_ORDER\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"MEASUREMENT\", \"DATA_VALUE\"}, {\"WORK_ORDER\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"MEASUREMENT\", \"DATA_VALUE\"}),\r\n  #\"Replaced value\" = Table.ReplaceValue(#\"Expanded Column1\", \"Wash Duration P1\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\r\n  #\"Replaced value 1\" = Table.ReplaceValue(#\"Replaced value\", \"Wash Duration P3\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\r\n  #\"Replaced value 2\" = Table.ReplaceValue(#\"Replaced value 1\", \"Wash Duration P5\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\r\n  #\"Pivoted column\" = Table.Pivot(Table.TransformColumnTypes(#\"Replaced value 2\", {{\"MEASUREMENT\", type text}}), List.Distinct(Table.TransformColumnTypes(#\"Replaced value 2\", {{\"MEASUREMENT\", type text}})[MEASUREMENT]), \"MEASUREMENT\", \"DATA_VALUE\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Pivoted column\", {{\"WORK_ORDER\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"Select EMO Gep / Kep\", type text}, {\"Wash Duration\", type number}, {\"Ink Test\", Int64.Type}}),\r\n  #\"Changed column type with locale\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"Conductivity Cartridge 1 Input\", type number}, {\"Conductivity Cartridge 1 Output\", type number}}, \"en-US\")\r\nin\r\n  #\"Changed column type with locale\";\r\nshared API_CustomRep_EMO_Y21_GEP = let\r\n  Source = Json.Document(Web.Contents(parTargetDeplBaseURL &\"CustomReportData/Production/GEP/VHP/VHP Production/ME-PBI-CR-EMO/2020-12-31/2022-01-01/GEP\", [Headers=[Authorization=parToken]])),\r\n  #\"Converted to table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to table\", \"Column1\", {\"WORK_ORDER\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"MEASUREMENT\", \"DATA_VALUE\"}, {\"WORK_ORDER\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"MEASUREMENT\", \"DATA_VALUE\"}),\r\n  #\"Replaced value\" = Table.ReplaceValue(#\"Expanded Column1\", \"Wash Duration P1\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\r\n  #\"Replaced value 1\" = Table.ReplaceValue(#\"Replaced value\", \"Wash Duration P3\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\r\n  #\"Replaced value 2\" = Table.ReplaceValue(#\"Replaced value 1\", \"Wash Duration P5\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\r\n  #\"Pivoted column\" = Table.Pivot(Table.TransformColumnTypes(#\"Replaced value 2\", {{\"MEASUREMENT\", type text}}), List.Distinct(Table.TransformColumnTypes(#\"Replaced value 2\", {{\"MEASUREMENT\", type text}})[MEASUREMENT]), \"MEASUREMENT\", \"DATA_VALUE\"),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Pivoted column\", {{\"WORK_ORDER\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"Select EMO Gep / Kep\", type text}, {\"Wash Duration\", type number}, {\"Ink Test\", Int64.Type}}),\r\n  #\"Changed column type with locale\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"Conductivity Cartridge 1 Input\", type number}, {\"Conductivity Cartridge 1 Output\", type number}}, \"en-US\")\r\nin\r\n  #\"Changed column type with locale\";\r\nshared #\"API_CustomRep_EMO_Y19-20_KEP\" = let\n  Source = Json.Document(Web.Contents(parTargetDeplBaseURL &\"CustomReportData/Production/GEP/VHP/VHP Production/ME-PBI-CR-EMO/2018-12-31/2021-01-01/KEP\", [Headers=[Authorization=parToken]])),\n  #\"Converted to table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to table\", \"Column1\", {\"WORK_ORDER\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"MEASUREMENT\", \"DATA_VALUE\"}, {\"WORK_ORDER\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"MEASUREMENT\", \"DATA_VALUE\"}),\n  #\"Replaced value\" = Table.ReplaceValue(#\"Expanded Column1\", \"Wash Duration P1\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\n  #\"Replaced value 1\" = Table.ReplaceValue(#\"Replaced value\", \"Wash Duration P3\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\n  #\"Replaced value 2\" = Table.ReplaceValue(#\"Replaced value 1\", \"Wash Duration P5\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\n  #\"Pivoted column\" = Table.Pivot(Table.TransformColumnTypes(#\"Replaced value 2\", {{\"MEASUREMENT\", type text}}), List.Distinct(Table.TransformColumnTypes(#\"Replaced value 2\", {{\"MEASUREMENT\", type text}})[MEASUREMENT]), \"MEASUREMENT\", \"DATA_VALUE\"),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Pivoted column\", {{\"WORK_ORDER\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"Select EMO Gep / Kep\", type text}, {\"Ink Test\", Int64.Type}}),\n  #\"Changed column type with locale\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"Conductivity Cartridge 1 Input\", type number}, {\"Conductivity Cartridge 1 Output\", type number}, {\"Wash Duration\", type number}}, \"en-US\")\nin\n  #\"Changed column type with locale\";\r\nshared API_CustomRep_EMO_Y21_KEP = let\n  Source = Json.Document(Web.Contents(parTargetDeplBaseURL &\"CustomReportData/Production/GEP/VHP/VHP Production/ME-PBI-CR-EMO/2020-12-31/2022-01-01/KEP\", [Headers=[Authorization=parToken]])),\n  #\"Converted to table\" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to table\", \"Column1\", {\"WORK_ORDER\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"MEASUREMENT\", \"DATA_VALUE\"}, {\"WORK_ORDER\", \"SERIAL_NUMBER\", \"PART_NUMBER\", \"MEASUREMENT\", \"DATA_VALUE\"}),\n  #\"Replaced value\" = Table.ReplaceValue(#\"Expanded Column1\", \"Wash Duration P1\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\n  #\"Replaced value 1\" = Table.ReplaceValue(#\"Replaced value\", \"Wash Duration P3\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\n  #\"Replaced value 2\" = Table.ReplaceValue(#\"Replaced value 1\", \"Wash Duration P5\", \"Wash Duration\", Replacer.ReplaceValue, {\"MEASUREMENT\"}),\n  #\"Pivoted column\" = Table.Pivot(Table.TransformColumnTypes(#\"Replaced value 2\", {{\"MEASUREMENT\", type text}}), List.Distinct(Table.TransformColumnTypes(#\"Replaced value 2\", {{\"MEASUREMENT\", type text}})[MEASUREMENT]), \"MEASUREMENT\", \"DATA_VALUE\"),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Pivoted column\", {{\"WORK_ORDER\", type text}, {\"SERIAL_NUMBER\", type text}, {\"PART_NUMBER\", type text}, {\"Select EMO Gep / Kep\", type text}, {\"Ink Test\", Int64.Type}}),\n  #\"Changed column type with locale\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"Conductivity Cartridge 1 Input\", type number}, {\"Conductivity Cartridge 1 Output\", type number}, {\"Wash Duration\", type number}}, \"en-US\")\nin\n  #\"Changed column type with locale\";\r\n"},"annotations":[{"name":"pbi:QueryGroups","value":"[{\"id\":\"145e558f-70dc-4562-861c-1ca2975a0b47\",\"name\":\"Inactive\",\"description\":\"\",\"parentId\":null,\"order\":0},{\"id\":\"da8fd51d-52a4-4f2c-83c7-5374b9ce23b3\",\"name\":\"Inactive_CustomeReports\",\"description\":\"\",\"parentId\":null,\"order\":0}]"}],"entities":[{"$type":"LocalEntity","name":"WOFailures_API","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"WOFailures_API.csv"},"attributes":[{"name":"Sandbox","dataType":"string"},{"name":"CURRENT_PROCESS","dataType":"string"},{"name":"DESCRIPTION","dataType":"string"},{"name":"FAILURE","dataType":"string"},{"name":"FAILURE_DATE","dataType":"date"},{"name":"FAILURE_GROUP","dataType":"string"},{"name":"FAILURE_NOTES","dataType":"string"},{"name":"FLOW","dataType":"string"},{"name":"ORACLE_WO","dataType":"string"},{"name":"ORG","dataType":"string"},{"name":"PART_NUMBER","dataType":"string"},{"name":"PROCESS","dataType":"string"},{"name":"QTY","dataType":"double"},{"name":"QTY_REJECTED","dataType":"double"},{"name":"REJECTED_BY","dataType":"string"},{"name":"REJECT_TYPE","dataType":"string"},{"name":"SERIAL_NUMBER","dataType":"string"},{"name":"STATUS","dataType":"string"},{"name":"TYPE","dataType":"string"},{"name":"WORK_ORDER","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-19T07:42:05.6814445+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/37d3c76a-2694-4904-8e5f-9e812eff9328/WOFailures_API.csv?snapshot=2022-05-19T07%3A42%3A05.6480180Z"}]},{"$type":"LocalEntity","name":"WOCompletion_API","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"WOCompletion_API.csv"},"attributes":[{"name":"Sandbox","dataType":"string"},{"name":"COMPLETE_DateTime","dataType":"dateTime"},{"name":"CREATE_DateTime","dataType":"dateTime"},{"name":"CURRENT_PROCESS","dataType":"string"},{"name":"CUSTOMER","dataType":"string"},{"name":"CYCLE_TIME_SERIES_MINUTES","dataType":"int64"},{"name":"CYCLE_TIME_WORKORDER_MINUTES","dataType":"int64"},{"name":"DESCRIPTION","dataType":"string"},{"name":"DEVIATIONS","dataType":"string"},{"name":"FLOW","dataType":"string"},{"name":"ORACLE_WO","dataType":"string"},{"name":"ORG","dataType":"string"},{"name":"PART_NUMBER","dataType":"string"},{"name":"QTY","dataType":"int64"},{"name":"SALES_ORDER","dataType":"string"},{"name":"SCHEDULE_DATE","dataType":"dateTime"},{"name":"SERIAL_NUMBER","dataType":"string"},{"name":"STATUS","dataType":"string"},{"name":"TYPE","dataType":"string"},{"name":"SERIES","dataType":"int64"},{"name":"WORK_ORDER","dataType":"string"},{"name":"COMPLETE_Date","dataType":"date"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-19T07:43:27.4249299+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/37d3c76a-2694-4904-8e5f-9e812eff9328/WOCompletion_API.csv?snapshot=2022-05-19T07%3A43%3A27.3859244Z"}]},{"$type":"LocalEntity","name":"WO_SN_Deviations_API","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"WO_SN_Deviations_API.csv"},"attributes":[{"name":"Sandbox","dataType":"string"},{"name":"WORK_ORDER","dataType":"string"},{"name":"SERIAL_NUMBER","dataType":"string"},{"name":"Deviation","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-19T07:42:56.6012763+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/37d3c76a-2694-4904-8e5f-9e812eff9328/WO_SN_Deviations_API.csv?snapshot=2022-05-19T07%3A42%3A56.5878151Z"}]},{"$type":"LocalEntity","name":"Deviations_API","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Deviations_API.csv"},"attributes":[{"name":"Sandbox","dataType":"string"},{"name":"Deviation","dataType":"string"},{"name":"Deviation Description","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-19T07:43:23.9621528+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/37d3c76a-2694-4904-8e5f-9e812eff9328/Deviations_API.csv?snapshot=2022-05-19T07%3A43%3A23.9540269Z"}]},{"$type":"LocalEntity","name":"CustomReport_EMO_API","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"CustomReport_EMO_API.csv"},"attributes":[{"name":"WORK_ORDER","dataType":"string"},{"name":"SERIAL_NUMBER","dataType":"string"},{"name":"PART_NUMBER","dataType":"string"},{"name":"Conductivity Cartridge 1 Input","dataType":"double"},{"name":"Conductivity Cartridge 1 Output","dataType":"double"},{"name":"Wash Duration","dataType":"double"},{"name":"Ink Test","dataType":"int64"},{"name":"Select EMO Gep / Kep","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-05-19T07:43:07.7397788+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/37d3c76a-2694-4904-8e5f-9e812eff9328/CustomReport_EMO_API.csv?snapshot=2022-05-19T07%3A43%3A07.7219814Z"}]}]}