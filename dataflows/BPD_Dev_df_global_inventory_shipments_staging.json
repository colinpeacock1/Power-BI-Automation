{"name":"df_global_inventory_shipments_staging","description":"This dataflow contains Fact Table XXCOH_MS_SHIPMENT_VIEW that is used in the Corporate Inventory Report which is located in the \n\nWorkspace - Corporate Inventory Reports\nWorkspace - Corporate Inventory DataModels","version":"1.0","culture":"en-US","modifiedTime":"2022-06-08T12:43:38.0379581+00:00","pbi:mashup":{"fastCombine":true,"allowNativeQueries":true,"queriesMetadata":{"pM20Detail":{"queryId":"ec4c021a-4825-48ac-966b-58fa31eb935d","queryName":"pM20Detail","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pM20DetailAll":{"queryId":"2965b6ac-91d9-4192-9af1-155129dc719a","queryName":"pM20DetailAll","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pInventoryValue":{"queryId":"5a176480-b080-44b9-ae62-a957632271ca","queryName":"pInventoryValue","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"Version History Model":{"queryId":"d1d88b72-5b98-47c9-ac31-b235deae27d7","queryName":"Version History Model","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"Version History Report":{"queryId":"fdbcb66e-3942-4ea9-9c35-cae2a6b02ee7","queryName":"Version History Report","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"Version History":{"queryId":"2bf1e5d2-e81c-4c86-9342-1257c81a465f","queryName":"Version History","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"KeepColumn":{"queryId":"2f4ff8fa-1b12-40a2-a2b7-6ab7e8f858ac","queryName":"KeepColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"RemoveColumn":{"queryId":"c332635d-b620-4c74-b1e7-f5f74389d9f5","queryName":"RemoveColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"SnowflakeQuery":{"queryId":"f53ce5ac-0014-441f-a0f5-c540fdf4557c","queryName":"SnowflakeQuery","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FilterRowsbyColumn":{"queryId":"cc08daf4-2d5e-4da7-b970-d2acd9831a4c","queryName":"FilterRowsbyColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FilterNRows":{"queryId":"afd5b02b-0d56-4ee2-9c35-a0220a0bb1cb","queryName":"FilterNRows","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"GetEntity":{"queryId":"00aa1ccc-3354-4a12-92fa-d65ddc953bf4","queryName":"GetEntity","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"GetEntityFromWorkspace":{"queryId":"d7288925-e451-4640-bf3f-fc75518a1b8f","queryName":"GetEntityFromWorkspace","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"pWorkSpace":{"queryId":"136ef995-7550-4d55-b665-c306895cdb40","queryName":"pWorkSpace","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pDataFlow":{"queryId":"7f5f0e03-206a-413b-beab-85729ab5f679","queryName":"pDataFlow","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pFiscalCalendarDateFilter":{"queryId":"d4299f69-5646-40fe-a0f6-d88c1cedebff","queryName":"pFiscalCalendarDateFilter","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pSetMaxRows":{"queryId":"bea6a77d-6c5d-4e46-bc5f-0f951fe6f99b","queryName":"pSetMaxRows","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pOrganizationOrgs":{"queryId":"c53f6f06-7342-4e22-ab87-beab297e444e","queryName":"pOrganizationOrgs","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pTBU":{"queryId":"712aa63e-6676-42aa-9cfe-49f9254bd004","queryName":"pTBU","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pServerName":{"queryId":"9678b5e1-618d-4bed-8f47-a1e87cc65529","queryName":"pServerName","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pWarehouse":{"queryId":"f50e04c7-e91c-43ea-ac0e-154e3647e240","queryName":"pWarehouse","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pRole":{"queryId":"e7a0453e-71ac-4d6d-b576-c087fb422555","queryName":"pRole","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pDatabase":{"queryId":"6f2370f4-665d-4fdd-b09e-74757bd1d9d4","queryName":"pDatabase","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pTextColumns":{"queryId":"84ae23d9-f434-4633-ac64-d5a0658a06c2","queryName":"pTextColumns","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pNumberColumns":{"queryId":"0be1e274-784f-4b8a-95b0-6228b8506cf3","queryName":"pNumberColumns","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"pDateColumns":{"queryId":"c34b9dae-2e82-4b86-a6a0-40e51b54f94f","queryName":"pDateColumns","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f"},"ListOfOrgs":{"queryId":"f1f610fc-6348-47ae-86af-692f404cb1ce","queryName":"ListOfOrgs","queryGroupId":"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f","loadEnabled":true},"Version History Dataflow":{"queryId":"16844e25-79c0-48e1-a234-7adb2c775418","queryName":"Version History Dataflow","queryGroupId":"a91191ed-8efb-400b-bad7-2b8a42e2d413","loadEnabled":true},"GetColumnNames":{"queryId":"f124556a-ff71-4757-89d1-938d689b772a","queryName":"GetColumnNames","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"SetColumnType":{"queryId":"ef8083ec-f84e-4d39-8c4b-38e7454a9282","queryName":"SetColumnType","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FilterRowsbyDate":{"queryId":"763819b7-1ac3-4543-9744-52e363b881dc","queryName":"FilterRowsbyDate","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"SplitDateTimeColumn":{"queryId":"a55a0d1e-4523-4716-9caf-8086c5484b47","queryName":"SplitDateTimeColumn","queryGroupId":"7363d107-1f3d-48de-be9c-f033354d282e"},"FACT_Shipments":{"queryId":"f9bae0de-2d51-4614-84a5-9502e80f9f77","queryName":"FACT_Shipments","queryGroupId":"bbd6ee21-6a56-4a8c-b80f-2aad18bde5a6","loadEnabled":true},"RangeStart":{"queryId":"ee0b4caa-d980-4ef4-8e80-a563a1aab36a","queryName":"RangeStart"},"RangeEnd":{"queryId":"26649b9c-3794-46dd-a3be-ebd00d72dcbc","queryName":"RangeEnd"},"FACT_Shipments_Canary":{"queryId":"c3e985ed-a81a-42c7-8438-8a4bebe7dade","queryName":"FACT_Shipments_Canary"}},"document":"section Section1;\r\n\r\nshared pM20Detail = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_M20_DETAIL_V.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pM20DetailAll = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_M20_DETAIL_V_ALL_ACCOUNTS.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pInventoryValue = \"C:\\Users\\PeacocCo\\Coherent, Inc\\Power BI Community - Projects\\Inventory\\2. Measure\\DataModels\\test\\data\\XXREP_INVVALUE_V.csv\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared #\"Version History Model\" = let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"FcyxCoMwFEbhV/nJXOUa7NJVKThEBUeRcmtuaDAa0ICvXx3PGb5xVEVOOamH0qR1Rs+MShTli+5VxeA39MJznJerm80nzwFJjoQ1WgmYd+EkFqdPPxhNcHFH3Q8DeLNgODlR+xWJv0EOuD2ueDftp+qM6VpYTuxCPC/c3J6apj8=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\r\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\r\nin\r\n    #\"Changed Type\";\r\n\r\nshared #\"Version History Report\" = let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"FcqxCoAgEIDhVzmcMy6xpbWpLVrDQeKoI1HJs16/Gv+Pf11V12KLqlEGjdHYa7TQ2QF/GlPgCDP5LW3n11MUFvYBst8JComuGR6WA4SKwM2l+lC+caGcLlHOvQ==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\r\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\r\nin\r\n    #\"Changed Type\";\r\n\r\nshared #\"Version History\" = let\r\n    Source = Table.Combine({#\"Version History Model\", #\"Version History Report\"})\r\nin\r\n    Source;\r\n\r\nshared KeepColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    RemoveColumns = (Entity as table, ColumnNames as text) => let\r\n    CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\r\n    RemovedColumnList = List.Select(Table.ColumnNames(Entity), each not(List.Contains(CleanList, Text.Upper(_)))),\r\n    ModifiedEntity = if ColumnNames = \"\" then Entity else Table.RemoveColumns(Entity, RemovedColumnList)\r\nin\r\n    ModifiedEntity\r\nin\r\n    RemoveColumns;\r\n\r\nshared RemoveColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    RemoveColumns = (Entity as table, ColumnNames as text) => let\r\n    CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\r\n    RemovedColumnList = List.Select(Table.ColumnNames(Entity), each List.Contains(CleanList, Text.Upper(_))),\r\n    ModifiedEntity = Table.RemoveColumns(Entity, RemovedColumnList)\r\nin\r\n    ModifiedEntity\r\nin\r\n    RemoveColumns;\r\n\r\nshared SnowflakeQuery = let\r\n    // This function runs a query on the Snowflake database\r\n    // pass a sql query as a string to get the results of the query\r\n    // returned\r\n    // :returns: Table\r\n    SnowflakeQuery = (SQLQuery as text) => let\r\n    ReturnedValue =\r\n    Value.NativeQuery(\r\n    Snowflake.Databases(\r\n    pServerName,\r\n    pWarehouse,\r\n    [Role=pRole]\r\n    )\r\n    {[Name=pDatabase]}[Data],\r\n    SQLQuery,\r\n    null,\r\n    [EnableFolding=true]\r\n    )\r\nin\r\n    ReturnedValue\r\nin\r\n    SnowflakeQuery;\r\n\r\nshared FilterRowsbyColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    FilterColumn = (Entity as table, FilterValue as text, ColumnName as text) => let\r\n    CleanFilterValue = List.Transform(List.Transform(Text.Split(FilterValue, \",\"), Text.Trim), Text.Upper),\r\n    Filter = if List.AnyTrue({\r\n    not List.Contains(Table.ColumnNames(Entity), ColumnName),\r\n    FilterValue = \"\"\r\n    })\r\n    then Entity\r\n    else\r\n    try{\r\n    // returns a list with first entry an Entity (table)\r\n    Table.SelectRows(Entity, each List.Contains(List.Buffer(CleanFilterValue), Text.Upper(Record.Field(_, ColumnName))))\r\n    } otherwise {\r\n    Entity\r\n    },\r\n    // checks if Filter returned a list if so gets the filtered Entity from\r\n    // the first entry in the list otherwise returns the original Entity\r\n    Result = if Value.Is(Filter, List.Type) then Filter{0} else Filter\r\nin\r\n    Result\r\nin\r\n    FilterColumn;\r\n\r\nshared FilterNRows = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    FilterMaxRows = (Entity as table, FilterValue as number) => let\r\n    FilterMaxNoOfRows = if FilterValue > 0 then Table.FirstN(Entity, FilterValue) else Entity\r\nin\r\n    FilterMaxNoOfRows\r\nin\r\n    FilterMaxRows;\r\n\r\nshared GetEntity = let\r\n    // This function retrieves a table (Entity) from the given\r\n    // workspaceName and dataflowName which are pre-defined\r\n    // parameters\r\n    // Set the pWorkSpace and pDataFlow parameters before\r\n    // invoking this function\r\n    // :returns: Table\r\n    ReturnEntity = (pEntity as text) => let\r\n    Source = PowerBI.Dataflows(null),\r\n    UpperCaseWorkspace = Table.TransformColumns(Source, {{\"workspaceName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Workspace = UpperCaseWorkspace{[workspaceName=Text.Upper(pWorkSpace)]}[Data],\r\n    UpperCaseDataflow = Table.TransformColumns(Workspace, {{\"dataflowName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Dataflow = UpperCaseDataflow{[dataflowName=Text.Upper(pDataFlow)]}[Data],\r\n    UpperCaseEntity = Table.TransformColumns(Dataflow, {{\"entity\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Entity = UpperCaseEntity{[entity=Text.Upper(pEntity)]}[Data]\r\nin\r\n    Entity\r\nin\r\n    ReturnEntity;\r\n\r\nshared GetEntityFromWorkspace = let\r\n    // This function retrieves a table (Entity) for the give\r\n    // workspaceName and dataflowName which are variables\r\n    // invoked in this function\r\n    // :returns: Table\r\n    ReturnEntity = (pWorkSpace as text, pDataFlow as text, pEntity as text) => let\r\n    Source = PowerBI.Dataflows(null),\r\n    UpperCaseWorkspace = Table.TransformColumns(Source, {{\"workspaceName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Workspace = UpperCaseWorkspace{[workspaceName=Text.Upper(pWorkSpace)]}[Data],\r\n    UpperCaseDataflow = Table.TransformColumns(Workspace, {{\"dataflowName\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Dataflow = UpperCaseDataflow{[dataflowName=Text.Upper(pDataFlow)]}[Data],\r\n    UpperCaseEntity = Table.TransformColumns(Dataflow, {{\"entity\", each Text.Upper(Text.From(_)), type nullable text}}),\r\n    Entity = UpperCaseEntity{[entity=Text.Upper(pEntity)]}[Data]\r\nin\r\n    Entity\r\nin\r\n    ReturnEntity;\r\n\r\nshared pWorkSpace = \"COHR_DATAFLOWS\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pDataFlow = \"FIN_COMMON\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pFiscalCalendarDateFilter = 3 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type number];\r\n\r\n    [Description = \"Use this parameter to set values to Return Max No. of Rows#(lf)Set this value to 0 to disable\"]\r\nshared pSetMaxRows = 0 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type number];\r\n\r\nshared pOrganizationOrgs = \"\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pTBU = \"\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pServerName = \"mma12090.snowflakecomputing.com\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pWarehouse = \"COMPUTE_REPORTING\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pRole = \"GLBMFGOPERATIONSROLE\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pDatabase = \"PROD_DB\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pTextColumns = \"ENTITY,DEPT,ACCT,PROJ,HFM_PRODUCT,ALT_HFM_PRODUCT,M20_TBU,M20_PFC,INTERCO,ACCOUNT_DESC,GL_PERIOD,ITEM_ORG_ID_KEY,ITEM_ORG_CODE_KEY,ITEM_NUMBER,ITEM_TBU,ITEM_PRODUCT_FAMILY,SOURCE_TYPE,SUBINVENTORY_CODE,SUBINVENTORY_TYPE,ORGANIZATION_CODE,CURRENCY_CODE,VALID_FLAG,COMMENTS,FISCAL_WEEK,JE_SOURCE_CATEGORY,OPERATIONS_REPORTING,CS_DEMAND_SOURCE,CS_SUPPLY_SOURCE,ITEM_TYPE_CODE,EXCLUDE_FLAG,EXCLUDE_COMMENT,WIP_CLASS,ITEM_TYPE,PLANNER_CODE,MAKE_BUY,ITEM_STATUS,ABC_CLASS,INV_STATUS,ITEM_PRODUCT_LINE,ITEM_FORECAST_FIELD,ITEM_DESC,WIP_JOB_NO,ORA_PRODUCT_LINE,FIN_PRODUCT_LINE,ORA_FORECAST_FIELD,ORG_TBU,ORG_PRODUCT_FAMILY,ORG_PRODUCT_LINE,ORG_FORECAST_FIELD,PRODUCT_MAP_KEY,FIN_TBU,FIN_PFC,FISCAL_QUARTER,FISCAL_YEAR,MGT_PRODUCT_GROUP,MGT_SUB_PRODUCT_GROUP,BUSINESS_SEGMENT,ACCOUNT_NAME,ACCOUNT_DESC,ACCOUNT_TYPE,ACCOUNT_SUB_GROUP,ACCOUNT_GROUP,SUMMARY_ACCOUNT,INVVALUE_KEY\r\n    \" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pNumberColumns = \"TRAN_QTY,ACCOUNTED_DR,ACCOUNTED_CR,NET_ACCOUNTED_AMT,ACCOUNTED_NET_USD,INV_VALUE,INV_VALUE_USD,CURRENCY_RATE,ITEM_COST,MATERIAL_COST,MATERIAL_OVERHEAD_COST,OUTSIDE_PROCESSING_COST,OVERHEAD_COST,RESOURCE_COST,TOTAL_COST\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared pDateColumns = \"TRANS_DATE,WEEK_START_DATE,WEEK_END_DATE,PERIOD_START_DATE,PERIOD_END_DATE,QUARTER_START_DATE,QUARTER_END_DATE\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n\r\nshared ListOfOrgs = let\r\n    Source = pOrganizationOrgs,\r\n    GetListOfValues = Text.Split(Source, \",\"),\r\n    #\"Convert to table\" = Table.FromValue(GetListOfValues),\r\n    #\"Transform columns\" = Table.TransformColumnTypes(#\"Convert to table\", {{\"Value\", type text}}),\r\n    #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"Value\", null}})\r\nin\r\n    #\"Replace errors\";\r\n\r\nshared #\"Version History Dataflow\" = let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"NY0xDsIwDAC/YmVuqjSiCysIiY296mBSFyzSJIpd9fsUBOPdcDcMpmtd60xjvPPeut76HrrD0X3UKUdOcCMMObx2viZWxghKonBGxTnmDUIlVJpgY33CBYOC4j2SNDDxQkk4p58BTBMUrLiQUhUQUrsWmHP9Jjk9oKy1ZCHZb/+BGcc3\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [#\"Version Number\" = _t, #\"Revision Date/Time\" = _t, #\"Developer Name\" = _t, #\"Revision Notes\" = _t, #\"Revision Type\" = _t]),\r\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Version Number\", type text}, {\"Revision Date/Time\", type datetime}, {\"Developer Name\", type text}, {\"Revision Notes\", type text}, {\"Revision Type\", type text}})\r\nin\r\n    #\"Changed Type\";\r\n\r\nshared GetColumnNames = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    ColumnNames = (Entity as table) => let\r\n    GetColumnNames = Table.ColumnNames(Entity),\r\n    ConvertToTable = Table.FromList(GetColumnNames, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n    SetColumnName = Table.RenameColumns(ConvertToTable,{{\"Column1\", \"ColumnNames\"}}),\r\n    String = List.Accumulate(Table.ToList(SetColumnName),\"\",(state, current) => if state = \"\" then current else state & \",\" & current)\r\nin\r\n    String\r\nin\r\n    ColumnNames;\r\n\r\nshared SetColumnType = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    TransformDTypes = (Entity as table, ColumnNames as text, dtype as text) => let\r\n    CleanList = List.Transform(List.Transform(Text.Split(ColumnNames, \",\"), Text.Trim), Text.Upper),\r\n    ColumnList = List.Select(Table.ColumnNames(Entity), each List.Contains(CleanList, Text.Upper(_))),\r\n    // TransformDType = FilterMaxNoOfRows, each {{\"KANBAN_ITEM\", Int64.Type}, {\"MIN_MAX_ITEM\", Int64.Type}, {\"OPEN_BLANKETS\", Int64.Type}}),\r\n    TransformTypes = if List.IsEmpty(CleanList) then Entity else Table.TransformColumnTypes(Entity, List.Transform(\r\n    List.Intersect({Table.ColumnNames(Entity), ColumnList}),\r\n    if\r\n    dtype = \"text\" then each {_, type text} else if\r\n    dtype = \"number\" then each {_, type number} else if\r\n    dtype = \"date\" then each {_, type date} else if\r\n    dtype = \"time\" then each {_, type time}  else if\r\n    dtype = \"datetime\" then each {_, type datetime}   else if\r\n    dtype = \"whole\" then each {_, Int64.Type} else\r\n    each {_, type text} // default\r\n    )\r\n    )\r\n    //TransformTypes = Entity\r\nin\r\n    TransformTypes\r\nin\r\n    TransformDTypes;\r\n\r\nshared FilterRowsbyDate = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    FilterColumn = (Entity as table, ColumnName as text, MinDate as date, optional MaxDate as date) => let\r\n    Filter = if ColumnName = \"\" then Entity else Table.SelectRows(Entity, if MaxDate is null then each Record.Field(_, ColumnName) >= MinDate else each Record.Field(_, ColumnName) >= MinDate and Record.Field(_, ColumnName) <= MaxDate )\r\nin\r\n    Filter\r\nin\r\n    FilterColumn;\r\n\r\nshared SplitDateTimeColumn = let\r\n    // This function filters a table (Entity) by the first\r\n    // N rows pass FilterValue to set number of rows to\r\n    // return\r\n    // :returns: Table\r\n    DataTimeColumns = (Entity as table, ColumnNameDate as text) => let\r\n    ModifyColumns = (Entity as table, ColumnNameDate as text) =>\r\n    let\r\n    ColumnNameTime = Text.Replace(ColumnNameDate, \"DATE\", \"TIME\"),\r\n    TimeColumn = Table.DuplicateColumn(Entity, ColumnNameDate, ColumnNameTime),\r\n    SetFmtToTime = Table.TransformColumns(TimeColumn,{{ColumnNameTime, DateTime.Time, type time}}),\r\n    SetFmtToDate = Table.TransformColumns(SetFmtToTime,{{ColumnNameDate, DateTime.Date, type date}})\r\nin\r\n    SetFmtToDate,\r\n    SetFmtToDate = if not List.Contains(Table.ColumnNames(Entity), ColumnNameDate) then Entity else ModifyColumns(Entity, ColumnNameDate)\r\nin\r\n    SetFmtToDate\r\nin\r\n    DataTimeColumns;\r\n\r\nshared FACT_Shipments = let\r\n    Source = SnowflakeQuery(\"SELECT\r\n    shp.WAREHOUSE,\r\n    shp.BOOKED_DATE,\r\n    shp.ORDER_NUMBER,\r\n    shp.ORDER_LINE,\r\n    shp.ORDER_TYPE,\r\n    shp.SO_LINE_TYPE,\r\n    shp.LINE_STATUS,\r\n    shp.BILLABLE_FLAG,\r\n    shp.ACTUAL_SHIPMENT_DATE,\r\n    shp.REGIONAL_LOCATION,\r\n    shp.REPORTING_ENTITY,\r\n    shp.LINE_SOURCE_TYPE_CODE,\r\n    shp.CUSTOMER_PO,\r\n    shp.ITEM_NUMBER,\r\n    shp.ITEM_DESCRIPTION,\r\n    shp.REV_ENTITY,\r\n    shp.REVENUE_ACCOUNT,\r\n    shp.FORECAST_FIELD,\r\n    shp.COMMODITY,\r\n    shp.ORG_PRODUCT_LINE,\r\n    shp.ORG_PRODUCT_FAMILY,\r\n    shp.ORG_TECHNICAL_BUSINESS_UNIT,\r\n    shp.ORG_FORECAST_FIELD,\r\n    shp.PRIMARY_ORG,\r\n    shp.ITEM_MATERIAL_COST,\r\n    shp.ITEM_LABOR_COST,\r\n    shp.ITEM_MATERIAL_OVERHEAD,\r\n    shp.ITEM_LABOR_OVERHEAD,\r\n    shp.CUSTOMER_NAME_REPORTING,\r\n    shp.BILL_TO_COUNTRY,\r\n    shp.SHIP_TO_COUNTRY,\r\n    shp.FISCAL_WEEK_SHIPPED,\r\n    shp.FISCAL_PERIOD_SHIPPED,\r\n    shp.FISCAL_QUARTER_SHIPPED,\r\n    shp.FISCAL_YEAR_SHIPPED,\r\n    shp.LEGAL_ENTITY,\r\n    shp.OPERATING_UNIT_ID,\r\n    shp.OPERATING_UNIT,\r\n    shp.TRANSACTION_CURRENCY,\r\n    shp.FUNCTIONAL_CURRENCY,\r\n    shp.TRX_TO_USD_RATE,\r\n    shp.TRX_TO_FUNC_RATE,\r\n    shp.ITEM_MATERIAL_COST_USD,\r\n    shp.ITEM_LABOR_COST_USD,\r\n    shp.ITEM_MATERIAL_OVERHEAD_USD,\r\n    shp.ITEM_LABOR_OVERHEAD_USD,\r\n    shp.ITEM_OUT_PROC_COST_USD,\r\n    shp.SHIP_FROM_ORG_CODE,\r\n    shp.SUBINVENTORY,\r\n    shp.PICK_RELEASE_STATUS,\r\n    AVG(shp.ITEM_UNIT_COST_USD) AS ITEM_UNIT_COST_USD,\r\n    AVG(shp.ITEM_UNIT_COST) AS ITEM_UNIT_COST,\r\n    SUM(shp.EXTENDED_AMOUNT) AS EXTENDED_AMOUNT,\r\n    SUM(shp.EXTENDED_COST) AS EXTENDED_COST,\r\n    SUM(shp.EXTENDED_AMOUNT_USD) AS EXTENDED_AMOUNT_USD,\r\n    SUM(shp.EXTENDED_COST_USD) AS EXTENDED_COST_USD,\r\n    SUM(shp.SHIPPED_QUANTITY) AS SHIPPED_QUANTITY,\r\n    mp.WAREHOUSE_TYPE\r\n    FROM PROD_DB.APPS.XXCOH_MS_SHIPMENT_VIEW AS shp\r\n    LEFT JOIN (\r\n    SELECT\r\n    mp.ORGANIZATION_CODE,\r\n    mp.ATTRIBUTE13 AS WAREHOUSE_TYPE\r\n    FROM PROD_DB.INV.MTL_PARAMETERS as mp\r\n    WHERE\r\n    mp.ATTRIBUTE13 = 'MANUFACTURING') as mp ON mp.ORGANIZATION_CODE = shp.WAREHOUSE\r\n    WHERE\r\n    -- WAREHOUSE IS MFG ONLY\r\n    shp.FISCAL_YEAR_SHIPPED = 2022\r\n    AND shp.FISCAL_PERIOD_SHIPPED IN (4, 5, 6)\r\n    AND mp.WAREHOUSE_TYPE = 'MANUFACTURING'\r\n    -- AND STARTSWITH(shp.WAREHOUSE, 'P')\r\n    GROUP BY\r\n    shp.BOOKED_DATE,\r\n    shp.ORDER_NUMBER,\r\n    shp.ORDER_LINE,\r\n    shp.ORDER_TYPE,\r\n    shp.SO_LINE_TYPE,\r\n    shp.LINE_STATUS,\r\n    shp.BILLABLE_FLAG,\r\n    shp.ACTUAL_SHIPMENT_DATE,\r\n    shp.REGIONAL_LOCATION,\r\n    shp.REPORTING_ENTITY,\r\n    shp.LINE_SOURCE_TYPE_CODE,\r\n    shp.CUSTOMER_PO,\r\n    shp.ITEM_NUMBER,\r\n    shp.ITEM_DESCRIPTION,\r\n    shp.REV_ENTITY,\r\n    shp.REVENUE_ACCOUNT,\r\n    shp.FORECAST_FIELD,\r\n    shp.COMMODITY,\r\n    shp.ORG_PRODUCT_LINE,\r\n    shp.ORG_PRODUCT_FAMILY,\r\n    shp.ORG_TECHNICAL_BUSINESS_UNIT,\r\n    shp.ORG_FORECAST_FIELD,\r\n    shp.PRIMARY_ORG,\r\n    shp.WAREHOUSE,\r\n    shp.ITEM_MATERIAL_COST,\r\n    shp.ITEM_LABOR_COST,\r\n    shp.ITEM_MATERIAL_OVERHEAD,\r\n    shp.ITEM_LABOR_OVERHEAD,\r\n    shp.CUSTOMER_NAME_REPORTING,\r\n    shp.BILL_TO_COUNTRY,\r\n    shp.SHIP_TO_COUNTRY,\r\n    shp.FISCAL_WEEK_SHIPPED,\r\n    shp.FISCAL_PERIOD_SHIPPED,\r\n    shp.FISCAL_QUARTER_SHIPPED,\r\n    shp.FISCAL_YEAR_SHIPPED,\r\n    shp.LEGAL_ENTITY,\r\n    shp.OPERATING_UNIT_ID,\r\n    shp.OPERATING_UNIT,\r\n    shp.TRANSACTION_CURRENCY,\r\n    shp.FUNCTIONAL_CURRENCY,\r\n    shp.TRX_TO_USD_RATE,\r\n    shp.TRX_TO_FUNC_RATE,\r\n    shp.ITEM_MATERIAL_COST_USD,\r\n    shp.ITEM_LABOR_COST_USD,\r\n    shp.ITEM_MATERIAL_OVERHEAD_USD,\r\n    shp.ITEM_LABOR_OVERHEAD_USD,\r\n    shp.ITEM_OUT_PROC_COST_USD,\r\n    shp.SHIP_FROM_ORG_CODE,\r\n    shp.SUBINVENTORY,\r\n    shp.PICK_RELEASE_STATUS,\r\n    mp.WAREHOUSE_TYPE\"),\r\n    #\"FACT_Shipments-41435455414C5F534849504D454E545F44415445-autogenerated_for_incremental_refresh\" = Table.SelectRows(Source, each DateTime.From([ACTUAL_SHIPMENT_DATE]) >= RangeStart and DateTime.From([ACTUAL_SHIPMENT_DATE]) < RangeEnd)\r\nin\r\n    #\"FACT_Shipments-41435455414C5F534849504D454E545F44415445-autogenerated_for_incremental_refresh\";\r\n\r\nshared FACT_Shipments_Canary = let\r\n    Source = SnowflakeQuery(\"SELECT\r\n    shp.WAREHOUSE,\r\n    shp.BOOKED_DATE,\r\n    shp.ORDER_NUMBER,\r\n    shp.ORDER_LINE,\r\n    shp.ORDER_TYPE,\r\n    shp.SO_LINE_TYPE,\r\n    shp.LINE_STATUS,\r\n    shp.BILLABLE_FLAG,\r\n    shp.ACTUAL_SHIPMENT_DATE,\r\n    shp.REGIONAL_LOCATION,\r\n    shp.REPORTING_ENTITY,\r\n    shp.LINE_SOURCE_TYPE_CODE,\r\n    shp.CUSTOMER_PO,\r\n    shp.ITEM_NUMBER,\r\n    shp.ITEM_DESCRIPTION,\r\n    shp.REV_ENTITY,\r\n    shp.REVENUE_ACCOUNT,\r\n    shp.FORECAST_FIELD,\r\n    shp.COMMODITY,\r\n    shp.ORG_PRODUCT_LINE,\r\n    shp.ORG_PRODUCT_FAMILY,\r\n    shp.ORG_TECHNICAL_BUSINESS_UNIT,\r\n    shp.ORG_FORECAST_FIELD,\r\n    shp.PRIMARY_ORG,\r\n    shp.ITEM_MATERIAL_COST,\r\n    shp.ITEM_LABOR_COST,\r\n    shp.ITEM_MATERIAL_OVERHEAD,\r\n    shp.ITEM_LABOR_OVERHEAD,\r\n    shp.CUSTOMER_NAME_REPORTING,\r\n    shp.BILL_TO_COUNTRY,\r\n    shp.SHIP_TO_COUNTRY,\r\n    shp.FISCAL_WEEK_SHIPPED,\r\n    shp.FISCAL_PERIOD_SHIPPED,\r\n    shp.FISCAL_QUARTER_SHIPPED,\r\n    shp.FISCAL_YEAR_SHIPPED,\r\n    shp.LEGAL_ENTITY,\r\n    shp.OPERATING_UNIT_ID,\r\n    shp.OPERATING_UNIT,\r\n    shp.TRANSACTION_CURRENCY,\r\n    shp.FUNCTIONAL_CURRENCY,\r\n    shp.TRX_TO_USD_RATE,\r\n    shp.TRX_TO_FUNC_RATE,\r\n    shp.ITEM_MATERIAL_COST_USD,\r\n    shp.ITEM_LABOR_COST_USD,\r\n    shp.ITEM_MATERIAL_OVERHEAD_USD,\r\n    shp.ITEM_LABOR_OVERHEAD_USD,\r\n    shp.ITEM_OUT_PROC_COST_USD,\r\n    shp.SHIP_FROM_ORG_CODE,\r\n    shp.SUBINVENTORY,\r\n    shp.PICK_RELEASE_STATUS,\r\n    AVG(shp.ITEM_UNIT_COST_USD) AS ITEM_UNIT_COST_USD,\r\n    AVG(shp.ITEM_UNIT_COST) AS ITEM_UNIT_COST,\r\n    SUM(shp.EXTENDED_AMOUNT) AS EXTENDED_AMOUNT,\r\n    SUM(shp.EXTENDED_COST) AS EXTENDED_COST,\r\n    SUM(shp.EXTENDED_AMOUNT_USD) AS EXTENDED_AMOUNT_USD,\r\n    SUM(shp.EXTENDED_COST_USD) AS EXTENDED_COST_USD,\r\n    SUM(shp.SHIPPED_QUANTITY) AS SHIPPED_QUANTITY,\r\n    mp.WAREHOUSE_TYPE\r\n    FROM PROD_DB.APPS.XXCOH_MS_SHIPMENT_VIEW AS shp\r\n    LEFT JOIN (\r\n    SELECT\r\n    mp.ORGANIZATION_CODE,\r\n    mp.ATTRIBUTE13 AS WAREHOUSE_TYPE\r\n    FROM PROD_DB.INV.MTL_PARAMETERS as mp\r\n    WHERE\r\n    mp.ATTRIBUTE13 = 'MANUFACTURING') as mp ON mp.ORGANIZATION_CODE = shp.WAREHOUSE\r\n    WHERE\r\n    -- WAREHOUSE IS MFG ONLY\r\n    shp.FISCAL_YEAR_SHIPPED = 2022\r\n    AND shp.FISCAL_PERIOD_SHIPPED IN (4, 5, 6)\r\n    AND mp.WAREHOUSE_TYPE = 'MANUFACTURING'\r\n    -- AND STARTSWITH(shp.WAREHOUSE, 'P')\r\n    GROUP BY\r\n    shp.BOOKED_DATE,\r\n    shp.ORDER_NUMBER,\r\n    shp.ORDER_LINE,\r\n    shp.ORDER_TYPE,\r\n    shp.SO_LINE_TYPE,\r\n    shp.LINE_STATUS,\r\n    shp.BILLABLE_FLAG,\r\n    shp.ACTUAL_SHIPMENT_DATE,\r\n    shp.REGIONAL_LOCATION,\r\n    shp.REPORTING_ENTITY,\r\n    shp.LINE_SOURCE_TYPE_CODE,\r\n    shp.CUSTOMER_PO,\r\n    shp.ITEM_NUMBER,\r\n    shp.ITEM_DESCRIPTION,\r\n    shp.REV_ENTITY,\r\n    shp.REVENUE_ACCOUNT,\r\n    shp.FORECAST_FIELD,\r\n    shp.COMMODITY,\r\n    shp.ORG_PRODUCT_LINE,\r\n    shp.ORG_PRODUCT_FAMILY,\r\n    shp.ORG_TECHNICAL_BUSINESS_UNIT,\r\n    shp.ORG_FORECAST_FIELD,\r\n    shp.PRIMARY_ORG,\r\n    shp.WAREHOUSE,\r\n    shp.ITEM_MATERIAL_COST,\r\n    shp.ITEM_LABOR_COST,\r\n    shp.ITEM_MATERIAL_OVERHEAD,\r\n    shp.ITEM_LABOR_OVERHEAD,\r\n    shp.CUSTOMER_NAME_REPORTING,\r\n    shp.BILL_TO_COUNTRY,\r\n    shp.SHIP_TO_COUNTRY,\r\n    shp.FISCAL_WEEK_SHIPPED,\r\n    shp.FISCAL_PERIOD_SHIPPED,\r\n    shp.FISCAL_QUARTER_SHIPPED,\r\n    shp.FISCAL_YEAR_SHIPPED,\r\n    shp.LEGAL_ENTITY,\r\n    shp.OPERATING_UNIT_ID,\r\n    shp.OPERATING_UNIT,\r\n    shp.TRANSACTION_CURRENCY,\r\n    shp.FUNCTIONAL_CURRENCY,\r\n    shp.TRX_TO_USD_RATE,\r\n    shp.TRX_TO_FUNC_RATE,\r\n    shp.ITEM_MATERIAL_COST_USD,\r\n    shp.ITEM_LABOR_COST_USD,\r\n    shp.ITEM_MATERIAL_OVERHEAD_USD,\r\n    shp.ITEM_LABOR_OVERHEAD_USD,\r\n    shp.ITEM_OUT_PROC_COST_USD,\r\n    shp.SHIP_FROM_ORG_CODE,\r\n    shp.SUBINVENTORY,\r\n    shp.PICK_RELEASE_STATUS,\r\n    mp.WAREHOUSE_TYPE\"),\r\n    #\"FACT_Shipments-41435455414C5F534849504D454E545F44415445-autogenerated_for_incremental_refresh\" = Table.SelectRows(Source, each DateTime.From([ACTUAL_SHIPMENT_DATE]) >= RangeStart and DateTime.From([ACTUAL_SHIPMENT_DATE]) < RangeEnd), #\"FACT_Shipments_Canary-41435455414C5F534849504D454E545F44415445-autogenerated_for_incremental_refresh\" = DateTime.ToText(Table.Max(#\"FACT_Shipments-41435455414C5F534849504D454E545F44415445-autogenerated_for_incremental_refresh\",each [ACTUAL_SHIPMENT_DATE], [ACTUAL_SHIPMENT_DATE=#datetime(0001,01,01,00,00,00)])[ACTUAL_SHIPMENT_DATE]) in #\"FACT_Shipments_Canary-41435455414C5F534849504D454E545F44415445-autogenerated_for_incremental_refresh\";\r\n\r\nshared RangeStart = let RangeStart = #datetime(0001,01,01,00,00,00) meta [IsParameterQuery=true, List={}, Type=\"DateTime\", IsParameterQueryRequired=true, Description=\"autogenerated_for_incremental_refresh\"] in RangeStart;\r\n\r\nshared RangeEnd = let RangeEnd = #datetime(9999,12,31,23,59,59) meta [IsParameterQuery=true, List={}, Type=\"DateTime\", IsParameterQueryRequired=true, Description=\"autogenerated_for_incremental_refresh\"] in RangeEnd;\r\n\r\n"},"annotations":[{"name":"pbi:QueryGroups","value":"[{\"id\":\"7363d107-1f3d-48de-be9c-f033354d282e\",\"name\":\"Functions\",\"description\":null,\"parentId\":null,\"order\":0},{\"id\":\"5bac1fbe-fe1d-4da2-94f5-070ea55ef66f\",\"name\":\"Parameters\",\"description\":\"\",\"parentId\":null,\"order\":1},{\"id\":\"bbd6ee21-6a56-4a8c-b80f-2aad18bde5a6\",\"name\":\"Facts - Inventory Turns\",\"description\":\"\",\"parentId\":null,\"order\":2},{\"id\":\"a91191ed-8efb-400b-bad7-2b8a42e2d413\",\"name\":\"Versioning\",\"description\":\"\",\"parentId\":null,\"order\":5},{\"id\":\"d535d7f0-f50c-47a1-a1c5-b52444b9ad0e\",\"name\":\"Information\",\"description\":\"Data Update Information for the Inventory Velocity Tables\",\"parentId\":null,\"order\":0}]"}],"entities":[{"$type":"LocalEntity","name":"Version History Model","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History%20Model.csv"},"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-13T09:03:42.1362131+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/Version%20History%20Model.csv?snapshot=2022-06-13T09%3A03%3A39.2405971Z"}]},{"$type":"LocalEntity","name":"Version History Report","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History%20Report.csv"},"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-13T09:03:41.8080823+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/Version%20History%20Report.csv?snapshot=2022-06-13T09%3A03%3A39.3315428Z"}]},{"$type":"LocalEntity","name":"Version History","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History.csv"},"annotations":[{"name":"pbi:EntityTypeDisplayHint","value":"CalculatedEntity"}],"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-13T09:03:47.99579+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/Version%20History.csv?snapshot=2022-06-13T09%3A03%3A47.5825988Z"}]},{"$type":"LocalEntity","name":"ListOfOrgs","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"ListOfOrgs.csv"},"attributes":[{"name":"Value","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-13T09:03:15.6598042+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/ListOfOrgs.csv?snapshot=2022-06-13T09%3A03%3A15.4598470Z"}]},{"$type":"LocalEntity","name":"Version History Dataflow","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Version%20History%20Dataflow.csv"},"attributes":[{"name":"Version Number","dataType":"string"},{"name":"Revision Date/Time","dataType":"dateTime"},{"name":"Developer Name","dataType":"string"},{"name":"Revision Notes","dataType":"string"},{"name":"Revision Type","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-06-13T09:03:14.7847994+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/Version%20History%20Dataflow.csv?snapshot=2022-06-13T09%3A03%3A14.6043592Z"}]},{"$type":"LocalEntity","name":"FACT_Shipments","description":"","pbi:refreshPolicy":{"$type":"IncrementalRefreshPolicy","locationPattern":"FACT_Shipments/part.csv","rollingWindowGranularity":"quarter","rollingWindowPeriods":12,"incrementalGranularity":"quarter","incrementalPeriods":1,"pollingQuery":"FACT_Shipments_Canary"},"annotations":[{"name":"pbi:IncrementalRefreshDetectChangeAttribute","value":"ACTUAL_SHIPMENT_DATE"},{"name":"pbi:IncrementalRefreshFilterByAttribute","value":"ACTUAL_SHIPMENT_DATE"}],"attributes":[{"name":"WAREHOUSE","dataType":"string"},{"name":"BOOKED_DATE","dataType":"dateTime"},{"name":"ORDER_NUMBER","dataType":"double"},{"name":"ORDER_LINE","dataType":"string"},{"name":"ORDER_TYPE","dataType":"string"},{"name":"SO_LINE_TYPE","dataType":"string"},{"name":"LINE_STATUS","dataType":"string"},{"name":"BILLABLE_FLAG","dataType":"string"},{"name":"ACTUAL_SHIPMENT_DATE","dataType":"dateTime"},{"name":"REGIONAL_LOCATION","dataType":"string"},{"name":"REPORTING_ENTITY","dataType":"string"},{"name":"LINE_SOURCE_TYPE_CODE","dataType":"string"},{"name":"CUSTOMER_PO","dataType":"string"},{"name":"ITEM_NUMBER","dataType":"string"},{"name":"ITEM_DESCRIPTION","dataType":"string"},{"name":"REV_ENTITY","dataType":"string"},{"name":"REVENUE_ACCOUNT","dataType":"string"},{"name":"FORECAST_FIELD","dataType":"string"},{"name":"COMMODITY","dataType":"string"},{"name":"ORG_PRODUCT_LINE","dataType":"string"},{"name":"ORG_PRODUCT_FAMILY","dataType":"string"},{"name":"ORG_TECHNICAL_BUSINESS_UNIT","dataType":"string"},{"name":"ORG_FORECAST_FIELD","dataType":"string"},{"name":"PRIMARY_ORG","dataType":"string"},{"name":"ITEM_MATERIAL_COST","dataType":"double"},{"name":"ITEM_LABOR_COST","dataType":"double"},{"name":"ITEM_MATERIAL_OVERHEAD","dataType":"double"},{"name":"ITEM_LABOR_OVERHEAD","dataType":"double"},{"name":"CUSTOMER_NAME_REPORTING","dataType":"string"},{"name":"BILL_TO_COUNTRY","dataType":"string"},{"name":"SHIP_TO_COUNTRY","dataType":"string"},{"name":"FISCAL_WEEK_SHIPPED","dataType":"double"},{"name":"FISCAL_PERIOD_SHIPPED","dataType":"double"},{"name":"FISCAL_QUARTER_SHIPPED","dataType":"double"},{"name":"FISCAL_YEAR_SHIPPED","dataType":"double"},{"name":"LEGAL_ENTITY","dataType":"string"},{"name":"OPERATING_UNIT_ID","dataType":"double"},{"name":"OPERATING_UNIT","dataType":"string"},{"name":"TRANSACTION_CURRENCY","dataType":"string"},{"name":"FUNCTIONAL_CURRENCY","dataType":"string"},{"name":"TRX_TO_USD_RATE","dataType":"double"},{"name":"TRX_TO_FUNC_RATE","dataType":"double"},{"name":"ITEM_MATERIAL_COST_USD","dataType":"double"},{"name":"ITEM_LABOR_COST_USD","dataType":"double"},{"name":"ITEM_MATERIAL_OVERHEAD_USD","dataType":"double"},{"name":"ITEM_LABOR_OVERHEAD_USD","dataType":"double"},{"name":"ITEM_OUT_PROC_COST_USD","dataType":"double"},{"name":"SHIP_FROM_ORG_CODE","dataType":"string"},{"name":"SUBINVENTORY","dataType":"string"},{"name":"PICK_RELEASE_STATUS","dataType":"string"},{"name":"ITEM_UNIT_COST_USD","dataType":"double"},{"name":"ITEM_UNIT_COST","dataType":"double"},{"name":"EXTENDED_AMOUNT","dataType":"double"},{"name":"EXTENDED_COST","dataType":"double"},{"name":"EXTENDED_AMOUNT_USD","dataType":"double"},{"name":"EXTENDED_COST_USD","dataType":"double"},{"name":"SHIPPED_QUANTITY","dataType":"double"},{"name":"WAREHOUSE_TYPE","dataType":"string"}],"partitions":[{"name":"IncrementalRefreshPolicyPartition-2019Q2","refreshTime":"2022-06-08T12:44:12.7599971+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2019Q2.csv?snapshot=2022-06-08T12%3A44%3A12.7138263Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2019-04-01T00:00:00","end":"2019-07-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2019Q3","refreshTime":"2022-06-08T12:44:13.1745485+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2019Q3.csv?snapshot=2022-06-08T12%3A44%3A13.1455784Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2019-07-01T00:00:00","end":"2019-10-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2019Q4","refreshTime":"2022-06-08T12:44:12.8537682+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2019Q4.csv?snapshot=2022-06-08T12%3A44%3A12.8177664Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2019-10-01T00:00:00","end":"2020-01-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2020Q1","refreshTime":"2022-06-08T12:44:13.2370713+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2020Q1.csv?snapshot=2022-06-08T12%3A44%3A13.2205360Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2020-01-01T00:00:00","end":"2020-04-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2020Q2","refreshTime":"2022-06-08T12:44:12.5568735+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2020Q2.csv?snapshot=2022-06-08T12%3A44%3A12.5439244Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2020-04-01T00:00:00","end":"2020-07-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2020Q3","refreshTime":"2022-06-08T12:44:12.8068676+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2020Q3.csv?snapshot=2022-06-08T12%3A44%3A12.7857843Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2020-07-01T00:00:00","end":"2020-10-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2020Q4","refreshTime":"2022-06-08T12:44:14.3471468+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2020Q4.csv?snapshot=2022-06-08T12%3A44%3A14.3279010Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2020-10-01T00:00:00","end":"2021-01-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2021Q1","refreshTime":"2022-06-08T12:44:12.7599971+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2021Q1.csv?snapshot=2022-06-08T12%3A44%3A12.7358134Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2021-01-01T00:00:00","end":"2021-04-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2021Q2","refreshTime":"2022-06-08T12:44:12.087626+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2021Q2.csv?snapshot=2022-06-08T12%3A44%3A12.0711938Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2021-04-01T00:00:00","end":"2021-07-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2021Q3","refreshTime":"2022-06-08T12:44:13.9565929+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2021Q3.csv?snapshot=2022-06-08T12%3A44%3A13.9361254Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2021-07-01T00:00:00","end":"2021-10-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2021Q4","refreshTime":"2022-06-08T12:44:09.5708217+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2021Q4.csv?snapshot=2022-06-08T12%3A44%3A09.5456422Z","pbi:refreshBookmark":"1/1/0001 12:00:00 AM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2021-10-01T00:00:00","end":"2022-01-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2022Q1","refreshTime":"2022-06-08T12:44:41.169307+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2022Q1.csv?snapshot=2022-06-08T12%3A44%3A41.1555243Z","pbi:refreshBookmark":"3/31/2022 11:49:17 PM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2022-01-01T00:00:00","end":"2022-04-01T00:00:00"}},{"name":"IncrementalRefreshPolicyPartition-2022Q2","refreshTime":"2022-06-08T12:44:16.1909244+00:00","location":"https://wabiwuscpcdsa.blob.core.windows.net:443/2fcf603e-4415-4b51-8b3b-4d9285e6a3d9/FACT_Shipments/part-2022Q2.csv?snapshot=2022-06-08T12%3A44%3A16.1708448Z","pbi:refreshBookmark":"4/2/2022 12:20:44 PM","pbi:source":{"$type":"RangePolicyPartitionSource","start":"2022-04-01T00:00:00","end":"2022-07-01T00:00:00"}}]}]}